{"version":3,"file":"63eba335-a8099f34a3460efe3162.js","mappings":"6OASA,mDAqLA,IAnIMA,WACJ,OAEIC,EAAAA,EAAAA,gBArDN,cAmDE,KACUC,EADV,eACwBC,EADxB,cACqCC,EADrC,aAIQC,GAAiBC,EAAAA,EAAAA,MAAzB,aAEMC,GAAaC,EAAAA,EAAAA,IAAW,GAAD,qCAA7B,KA2GA,OACE,cAAcC,GAAd,QAAyBC,cAAzB,MACE,QAAC,WAAD,CACEC,KAAKA,EAAAA,EAAAA,IAAF,iBACgBC,EAAAA,GAAAA,QAAAA,OADhB,cAGHC,QAJF,MADF,UASE,cAAUC,UAAWT,EAAAA,IAArB,UACGE,EAAAA,KAhHDQ,SAAa,GAC+B,IAAD,IAyBD,IAzB9C,2BAAIC,EAAAA,WACF,OACE,QAAC,UAAD,CAAeC,IAAKD,EAApB,GAA6BE,KAA7B,KAAuCC,MAAMC,EAAAA,EAAAA,IAAWJ,EAAxD,QACE,QAAC,WAAD,CAAkBH,QAAlB,MACGG,EADH,OAEE,aAFF,OAGE,cAAMK,GAAIL,EAAV,KAAqBM,UAArB,UACGN,EADH,aACmBA,EALvB,QAQGA,EAAAA,aACC,0BACEO,MAAOP,EADT,MAEEL,KAAKA,EAAAA,EAAAA,IAAF,4BAEaC,EAAAA,GAAAA,QAAAA,MAFb,cAIHY,IAAG,UAAER,EAAF,+BAAEA,EANP,gBAOMA,EAPN,+BAOMA,EAjBZ,iBAwBF,0BAAIA,EAAAA,WACF,OACE,QAAC,UAAD,CAAeC,IAAKD,EAApB,GAA6BE,KAA7B,KAAuCC,MAAMC,EAAAA,EAAAA,IAAWJ,EAAxD,QACE,QAAC,WAAD,CACEH,QADF,KAEEF,IAFF,UAMOK,EAPT,OASGA,EAAAA,aACC,0BACEO,MAAOP,EADT,MAEEL,KAAKA,EAAAA,EAAAA,IAAF,4BAEaC,EAAAA,GAAAA,QAAAA,MAFb,cAIHY,IAAG,UAAER,EAAF,+BAAEA,EANP,gBAOMA,EAPN,+BAOMA,EAlBZ,iBAyBF,4BAAIA,EAAAA,WAA4C,CAAC,IAAD,YACxCO,EAAK,oBACTP,EAAAA,UADS,uBACiBA,EAAAA,UADjB,4BACgDA,EAD3D,MAEMS,EAAQ,oBACZT,EAAAA,UADY,6BAEZA,EAAAA,UAFY,kCAGZA,EAAAA,UAHF,YAIMU,EAAK,oBACTV,EAAAA,UADS,uBAETA,EAAAA,UAFS,+BAGTA,EAAAA,UAHF,MAIA,OACE,QAAC,UAAD,CAAeC,IAAKD,EAApB,GAA6BE,KAA7B,KAAuCC,MAAMC,EAAAA,EAAAA,IAAWJ,EAAxD,OACGO,GAAAA,GAAAA,GACC,cACEA,MADF,EAEEE,UACE,aAAME,cAAN,aAEE,cACEhB,KAAKA,EAAAA,EAAAA,IAAF,cACaC,EAAAA,GAAAA,QAAAA,MADb,cAGHS,GAAIL,EAJN,KAKEM,UALF,UALN,oBAgBEM,SAjBHL,KAoBC,QAAC,WAAD,CAAkBV,QAAlB,SAEE,aAFF,OAGE,cAAMQ,GAAIL,EAAV,KAAqBM,UAArB,UAHF,oBAME,aA5BR,OAmCF,YAlGF,KAbF,C","sources":["webpack://@teimurjan/landing/./src/components/organisms/media/Media.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { prettyDate, sortByDate, theme } from '@teimurjan/utils'\nimport { MediaQuery } from '@teimurjan/gql-types'\nimport { Link, ScrollToArea, Typography } from '../../atoms'\nimport { useAppContext } from '../../../context'\nimport { MediaCard, Timeline } from '../../molecules'\nimport Flex from '@react-css/flex'\n\nconst query = graphql`\n  query Media {\n    gcms {\n      publications {\n        __typename\n        id\n        title\n        link\n        date\n        opengraph {\n          description\n          image\n          ogImage\n          ogDescription\n          ogTitle\n          ogType\n          ogUrl\n          twitterCard\n          twitterDescription\n          twitterImageSrc\n          twitterTitle\n          url\n        }\n      }\n      conferences {\n        __typename\n        id\n        title\n        topic\n        link\n        date\n        videoEmbed {\n          link\n          iframeOptions\n        }\n      }\n      interviews {\n        __typename\n        id\n        title\n        date\n        videoEmbed {\n          link\n          iframeOptions\n        }\n      }\n    }\n  }\n`\n\nconst Media = () => {\n  const {\n    gcms: { publications, conferences, interviews },\n  } = useStaticQuery<MediaQuery>(query)\n\n  const { visitedLinks } = useAppContext()\n\n  const mediaItems = sortByDate([\n    ...publications,\n    ...conferences,\n    ...interviews,\n  ])\n\n  const renderItem = (item: typeof mediaItems[0]) => {\n    if (item.__typename === 'GraphCMS_Conference') {\n      return (\n        <Timeline.Item key={item.id} icon=\"🎙\" date={prettyDate(item.date)}>\n          <Typography.Title variant=\"h5\">\n            {item.title}\n            <br />\n            <Link to={item.link} underline=\"always\">\n              {item.topic} at {item.title}\n            </Link>\n          </Typography.Title>\n          {item.videoEmbed && (\n            <iframe\n              title={item.title}\n              css={css`\n                display: block;\n                margin-top: ${theme.spacing.small};\n              `}\n              src={item.videoEmbed?.link}\n              {...item.videoEmbed?.iframeOptions}\n            />\n          )}\n        </Timeline.Item>\n      )\n    }\n\n    if (item.__typename === 'GraphCMS_Interview') {\n      return (\n        <Timeline.Item key={item.id} icon=\"📺\" date={prettyDate(item.date)}>\n          <Typography.Title\n            variant=\"h5\"\n            css={css`\n              margin-bottom: auto;\n            `}\n          >\n            TV: {item.title}\n          </Typography.Title>\n          {item.videoEmbed && (\n            <iframe\n              title={item.title}\n              css={css`\n                display: block;\n                margin-top: ${theme.spacing.small};\n              `}\n              src={item.videoEmbed?.link}\n              {...item.videoEmbed?.iframeOptions}\n            />\n          )}\n        </Timeline.Item>\n      )\n    }\n\n    if (item.__typename === 'GraphCMS_Publication') {\n      const title =\n        item.opengraph.ogTitle ?? item.opengraph.twitterTitle ?? item.title\n      const subtitle =\n        item.opengraph.ogDescription ??\n        item.opengraph.twitterDescription ??\n        item.opengraph.description\n      const image =\n        item.opengraph.ogImage ??\n        item.opengraph.twitterImageSrc ??\n        item.opengraph.image\n      return (\n        <Timeline.Item key={item.id} icon=\"✏️\" date={prettyDate(item.date)}>\n          {title && subtitle && image ? (\n            <MediaCard\n              title={title}\n              subtitle={\n                <Flex flexDirection=\"column\">\n                  {subtitle}\n                  <Link\n                    css={css`\n                      margin-top: ${theme.spacing.small};\n                    `}\n                    to={item.link}\n                    underline=\"always\"\n                  >\n                    Check it out 🔗\n                  </Link>\n                </Flex>\n              }\n              imageSrc={image}\n            />\n          ) : (\n            <Typography.Title variant=\"h5\">\n              {title}\n              <br />\n              <Link to={item.link} underline=\"always\">\n                Check it out 🔗\n              </Link>\n              <br />\n            </Typography.Title>\n          )}\n        </Timeline.Item>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <ScrollToArea id=\"media\" scrollOffset={-120}>\n      <Typography.Title\n        css={css`\n          margin-bottom: ${theme.spacing.medium};\n        `}\n        variant=\"h2\"\n      >\n        Media\n      </Typography.Title>\n      <Timeline hideLine={!visitedLinks.has('media')}>\n        {mediaItems.map(renderItem)}\n      </Timeline>\n    </ScrollToArea>\n  )\n}\n\nexport default Media\n"],"names":["Media","useStaticQuery","publications","conferences","interviews","visitedLinks","useAppContext","mediaItems","sortByDate","id","scrollOffset","css","theme","variant","hideLine","renderItem","item","key","icon","date","prettyDate","to","underline","title","src","subtitle","image","flexDirection","imageSrc"],"sourceRoot":""}