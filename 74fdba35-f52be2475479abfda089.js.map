{"version":3,"file":"74fdba35-f52be2475479abfda089.js","mappings":"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R,MAAQ,QACR,KAAQ,MACR,KAAQ,QACR,MAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,MAAQ,QACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,KAAQ,QACR,MAAQ,QACR,KAAQ,QACR,MAAQ,QACR,KAAQ,MACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,MAAQ,QACR,KAAQ,MACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,MAAQ,QACR,KAAQ,QACR,KAAQ,MACR,KAAQ,QACR,KAAQ,MACR,KAAQ,QACR,KAAQ,KACR,MAAQ,QACR,MAAQ,QACR,KAAQ,KACR,KAAQ,MACR,MAAQ,QACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,UACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,MAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,MACR,KAAQ,QACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,UACR,KAAQ,QACR,KAAQ,QACR,KAAQ,MACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,QACR,KAAQ,KACR,KAAQ,MACR,KAAQ,KACR,KAAQ,QAC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AI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IA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mB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI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","sources":["webpack://temp/./node_modules/@react-pdf/fontkit/lib/fontkit.browser.es.js"],"sourcesContent":["import r from 'restructure';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _applyDecoratedDescriptor from '@babel/runtime/helpers/applyDecoratedDescriptor';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\nvar fontkit = {};\nfontkit.logErrors = false;\nvar formats = [];\n\nfontkit.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n};\n\nfontkit.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n};\n\nfontkit.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nfontkit.defaultLanguage = 'en';\n\nfontkit.setDefaultLanguage = function (lang) {\n  if (lang === void 0) {\n    lang = 'en';\n  }\n\n  fontkit.defaultLanguage = lang;\n};\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\n\n\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n\n});\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n\n});\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\n\nfunction getEncoding(platformID, encodingID, languageID) {\n  if (languageID === void 0) {\n    languageID = 0;\n  }\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\n\nvar ENCODINGS = [// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], // ISO (deprecated)\n['ascii'], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, // ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\n\nfunction _createForOfIteratorHelperLoose$s(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$s(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$s(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$s(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$s(o, minLen);\n}\n\nfunction _arrayLikeToArray$s(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$s(this.records), _step; !(_step = _iterator()).done;) {\n    var record = _step.value; // find out what language this is for\n\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n}); // These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\nvar glyf = new r.Array(new r.Buffer());\n\nfunction _createForOfIteratorHelperLoose$r(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$r(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$r(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$r(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$r(o, minLen);\n}\n\nfunction _arrayLikeToArray$r(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar CFFIndex = /*#__PURE__*/function () {\n  function CFFIndex(type) {\n    this.type = type;\n  }\n\n  var _proto = CFFIndex.prototype;\n\n  _proto.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  _proto.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  _proto.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = _createForOfIteratorHelperLoose$r(arr), _step; !(_step = _iterator()).done;) {\n      var item = _step.value;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _i = 0, _sizes = sizes; _i < _sizes.length; _i++) {\n      var size = _sizes[_i];\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$r(arr), _step2; !(_step2 = _iterator2()).done;) {\n      var _item = _step2.value;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = /*#__PURE__*/function () {\n  function CFFOperand() {}\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nfunction _createForOfIteratorHelperLoose$q(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$q(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$q(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$q(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$q(o, minLen);\n}\n\nfunction _arrayLikeToArray$q(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar CFFDict = /*#__PURE__*/function () {\n  function CFFDict(ops) {\n    if (ops === void 0) {\n      ops = [];\n    }\n\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose$q(ops), _step; !(_step = _iterator()).done;) {\n      var field = _step.value;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  var _proto = CFFDict.prototype;\n\n  _proto.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  _proto.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error(\"Unknown operator \" + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  _proto.size = function size(dict, parent, includePointers) {\n    if (includePointers === void 0) {\n      includePointers = true;\n    }\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$q(operands), _step2; !(_step2 = _iterator2()).done;) {\n        var op = _step2.value;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  _proto.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose$q(this.ops), _step3; !(_step3 = _iterator3()).done;) {\n      var field = _step3.value;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose$q(operands), _step4; !(_step4 = _iterator4()).done;) {\n        var op = _step4.value;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose$q(key), _step5; !(_step5 = _iterator5()).done;) {\n        var _op = _step5.value;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = /*#__PURE__*/function (_r$Pointer) {\n  _inheritsLoose(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return _r$Pointer.call(this, null, type, options) || this;\n  }\n\n  var _proto = CFFPointer.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = /*#__PURE__*/function () {\n  function Ptr(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  var _proto2 = Ptr.prototype;\n\n  _proto2.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = /*#__PURE__*/function () {\n  function CFFBlendOp() {}\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]); // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior']; // Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _[\"axisIndex\"] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n}); // otherwise delegates to the provided type.\n\nvar PredefinedOp = /*#__PURE__*/function () {\n  function PredefinedOp(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  var _proto = PredefinedOp.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  _proto.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = /*#__PURE__*/function (_r$Number) {\n  _inheritsLoose(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    return _r$Number.call(this, 'UInt8') || this;\n  }\n\n  var _proto2 = CFFEncodingVersion.prototype;\n\n  _proto2.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  } // TODO: supplement?\n\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(RangeArray, _r$Array);\n\n  function RangeArray() {\n    return _r$Array.apply(this, arguments) || this;\n  }\n\n  var _proto3 = RangeArray.prototype;\n\n  _proto3.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = /*#__PURE__*/function () {\n  function CFFPrivateOp() {}\n\n  var _proto4 = CFFPrivateOp.prototype;\n\n  _proto4.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  _proto4.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  _proto4.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], 'PaintType', 'number', 0]]);\nvar CFFTopDict = new CFFDict([// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], // CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = /*#__PURE__*/function () {\n  function CFFFont(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  var _proto = CFFFont.prototype;\n\n  _proto.decode = function decode() {\n    this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  _proto.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  _proto.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  _proto.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  _proto.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error(\"Unknown FDSelect version: \" + this.topDict.FDSelect.version);\n    }\n  };\n\n  _proto.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  _createClass(CFFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {};\n\nvar BitAligned = function BitAligned() {};\n\nnew r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis$1 = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis$1),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis$1) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = /*#__PURE__*/function () {\n  function ValueRecord(key) {\n    if (key === void 0) {\n      key = 'valueFormat';\n    }\n\n    this.key = key;\n  }\n\n  var _proto = ValueRecord.prototype;\n\n  _proto.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  _proto.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n}); // export GPOSLookup for JSTF table\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\nvar VariableSizeNumber = /*#__PURE__*/function () {\n  function VariableSizeNumber(size) {\n    this._size = size;\n  }\n\n  var _proto = VariableSizeNumber.prototype;\n\n  _proto.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  _proto.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n\n});\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable$1 = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n}); // Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n}); // NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n}); // sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n\n});\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n\n});\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac$1,\n  toCoord: shortFrac$1\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = /*#__PURE__*/function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  var _proto = UnboundedArrayAccessor.prototype;\n\n  _proto.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  _proto.inspect = function inspect() {\n    return \"[UnboundedArray \" + this.type.constructor.name + \"]\";\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    return _r$Array.call(this, type, 0) || this;\n  }\n\n  var _proto2 = UnboundedArray.prototype;\n\n  _proto2.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable(ValueType) {\n  if (ValueType === void 0) {\n    ValueType = r.uint16;\n  } // Helper class that makes internal structures invisible to pointers\n\n\n  var Shadow = /*#__PURE__*/function () {\n    function Shadow(type) {\n      this.type = type;\n    }\n\n    var _proto3 = Shadow.prototype;\n\n    _proto3.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    _proto3.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    _proto3.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\n\nfunction StateTable1(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\nvar Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\nvar shortFrac = new r.Fixed(16, 'BE', 14);\n\nvar Offset = /*#__PURE__*/function () {\n  function Offset() {}\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\nvar tables = {};\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\n\ntables.HVAR = HVAR; // Other OpenType Tables\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nfunction _createForOfIteratorHelperLoose$p(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$p(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$p(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$p(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$p(o, minLen);\n}\n\nfunction _arrayLikeToArray$p(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$p(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$1 = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$1.length;\n  this.tables = tables$1;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$4;\n\nfunction _createForOfIteratorHelperLoose$o(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$o(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$o(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$o(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$o(o, minLen);\n}\n\nfunction _arrayLikeToArray$o(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$4 = /*#__PURE__*/function () {\n  function CmapProcessor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = _createForOfIteratorHelperLoose$o(cmapTable.tables), _step; !(_step = _iterator()).done;) {\n        var cmap = _step.value;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  var _proto = CmapProcessor.prototype;\n\n  _proto.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose$o(pairs), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          platformID = _step2$value[0],\n          encodingID = _step2$value[1];\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$o(cmapTable.tables), _step3; !(_step3 = _iterator3()).done;) {\n        var cmap = _step3.value;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  _proto.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step4; !(_step4 = _iterator4()).done;) {\n            var group = _step4.value;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i = 0; _i < cmap.segCount; _i++) {\n            var end = cmap.endCode.get(_i);\n            var start = cmap.startCode.get(_i);\n            var rangeOffset = cmap.idRangeOffset.get(_i);\n            var delta = cmap.idDelta.get(_i);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step5; !(_step5 = _iterator5()).done;) {\n            var group = _step5.value;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step6; !(_step6 = _iterator6()).done;) {\n            var _group = _step6.value;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), (_applyDecoratedDescriptor(_class$4.prototype, \"getCharacterSet\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"getCharacterSet\"), _class$4.prototype), _applyDecoratedDescriptor(_class$4.prototype, \"codePointsForGlyph\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"codePointsForGlyph\"), _class$4.prototype)), _class$4);\n\nfunction _createForOfIteratorHelperLoose$n(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$n(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$n(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$n(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$n(o, minLen);\n}\n\nfunction _arrayLikeToArray$n(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar KernProcessor = /*#__PURE__*/function () {\n  function KernProcessor(font) {\n    this.kern = font.kern;\n  }\n\n  var _proto = KernProcessor.prototype;\n\n  _proto.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  _proto.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose$n(this.kern.tables), _step; !(_step = _iterator()).done;) {\n      var table = _step.value;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning table version \" + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning sub-table format \" + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\n\nvar UnicodeLayoutEngine = /*#__PURE__*/function () {\n  function UnicodeLayoutEngine(font) {\n    this.font = font;\n  }\n\n  var _proto = UnicodeLayoutEngine.prototype;\n\n  _proto.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  _proto.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  _proto.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n/**\n * Represents a glyph bounding box\n */\n\n\nvar BBox = /*#__PURE__*/function () {\n  function BBox(minX, minY, maxX, maxY) {\n    if (minX === void 0) {\n      minX = Infinity;\n    }\n\n    if (minY === void 0) {\n      minY = Infinity;\n    }\n\n    if (maxX === void 0) {\n      maxX = -Infinity;\n    }\n\n    if (maxY === void 0) {\n      maxY = -Infinity;\n    }\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n\n\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  var _proto = BBox.prototype;\n\n  _proto.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  _proto.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  _createClass(BBox, [{\n    key: \"width\",\n    get: function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }]);\n\n  return BBox;\n}();\n\nfunction _createForOfIteratorHelperLoose$m(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$m(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$m(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$m(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$m(o, minLen);\n}\n\nfunction _arrayLikeToArray$m(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n} // Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = _createForOfIteratorHelperLoose$m(tag), _step; !(_step = _iterator()).done;) {\n      var t = _step.value;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nfunction forCodePoints(codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    var codePoint = codePoints[i];\n\n    var _script2 = unicode.getScript(codePoint);\n\n    if (_script2 !== 'Common' && _script2 !== 'Inherited' && _script2 !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script2];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\nfunction _createForOfIteratorHelperLoose$l(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$l(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$l(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$l(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$l(o, minLen);\n}\n\nfunction _arrayLikeToArray$l(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\n\nvar GlyphRun = /*#__PURE__*/function () {\n  function GlyphRun(glyphs, features, script, language, direction$1) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$1 || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = _createForOfIteratorHelperLoose$l(features), _step; !(_step = _iterator()).done;) {\n        var tag = _step.value;\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  _createClass(GlyphRun, [{\n    key: \"advanceWidth\",\n    get: function get() {\n      var width = 0;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$l(this.positions), _step2; !(_step2 = _iterator2()).done;) {\n        var position = _step2.value;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      var height = 0;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$l(this.positions), _step3; !(_step3 = _iterator3()).done;) {\n        var position = _step3.value;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n\n  return GlyphRun;\n}();\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\n\n\nvar GlyphPosition = function GlyphPosition(xAdvance, yAdvance, xOffset, yOffset) {\n  if (xAdvance === void 0) {\n    xAdvance = 0;\n  }\n\n  if (yAdvance === void 0) {\n    yAdvance = 0;\n  }\n\n  if (xOffset === void 0) {\n    xOffset = 0;\n  }\n\n  if (yOffset === void 0) {\n    yOffset = 0;\n  }\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n\n\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n}; // see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\n\n\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping[\"cv\" + (\"00\" + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r = void 0;\n\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n  } else if (typeof features === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _createForOfIteratorHelperLoose$k(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$k(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$k(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$k(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$k(o, minLen);\n}\n\nfunction _arrayLikeToArray$k(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar AATLookupTable = (_class$3 = /*#__PURE__*/function () {\n  function AATLookupTable(table) {\n    this.table = table;\n  }\n\n  var _proto = AATLookupTable.prototype;\n\n  _proto.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n  };\n\n  _proto.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = _createForOfIteratorHelperLoose$k(this.table.segments), _step; !(_step = _iterator()).done;) {\n            var segment = _step.value;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = _createForOfIteratorHelperLoose$k(this.table.segments), _step2; !(_step2 = _iterator2()).done;) {\n            var _segment = _step2.value;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor(_class$3.prototype, \"glyphsForValue\", [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, \"glyphsForValue\"), _class$3.prototype), _class$3);\n\nfunction _createForOfIteratorHelperLoose$j(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$j(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$j(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$j(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$j(o, minLen);\n}\n\nfunction _arrayLikeToArray$j(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = /*#__PURE__*/function () {\n  function AATStateMachine(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  var _proto = AATStateMachine.prototype;\n\n  _proto.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  ;\n\n  _proto.traverse = function traverse(opts, state, visited) {\n    if (state === void 0) {\n      state = 0;\n    }\n\n    if (visited === void 0) {\n      visited = new Set();\n    }\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _this$stateTable = this.stateTable,\n        nClasses = _this$stateTable.nClasses,\n        stateArray = _this$stateTable.stateArray,\n        entryTable = _this$stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = _createForOfIteratorHelperLoose$j(this.lookupTable.glyphsForValue(classCode)), _step; !(_step = _iterator()).done;) {\n        var glyph = _step.value;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _createForOfIteratorHelperLoose$i(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$i(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$i(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$i(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$i(o, minLen);\n}\n\nfunction _arrayLikeToArray$i(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3FFFFFFF;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03E0;\nvar MARKED_INSERT_COUNT = 0x001F;\nvar AATMorxProcessor = (_class$2 = /*#__PURE__*/function () {\n  function AATMorxProcessor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n\n\n  var _proto = AATMorxProcessor.prototype;\n\n  _proto.process = function process(glyphs, features) {\n    if (features === void 0) {\n      features = {};\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose$i(this.morx.chains), _step; !(_step = _iterator()).done;) {\n      var chain = _step.value;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$i(chain.features), _step2; !(_step2 = _iterator2()).done;) {\n        var feature = _step2.value;\n        var f = void 0;\n\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$i(chain.subtables), _step3; !(_step3 = _iterator3()).done;) {\n        var subtable = _step3.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  _proto.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  _proto.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  _proto.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error(\"Invalid morx subtable type: \" + this.subtable.type);\n    }\n  };\n\n  _proto.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  _proto.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  _proto.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _this$ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n\n      (_this$ligatureStack = this.ligatureStack).push.apply(_this$ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  _proto.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  _proto._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _this$glyphs;\n\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  _proto.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  _proto.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose$i(this.morx.chains), _step4; !(_step4 = _iterator4()).done;) {\n      var chain = _step4.value;\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose$i(chain.features), _step5; !(_step5 = _iterator5()).done;) {\n        var feature = _step5.value;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  _proto.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  _proto.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose$i(this.morx.chains), _step6; !(_step6 = _iterator6()).done;) {\n      var chain = _step6.value;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = _createForOfIteratorHelperLoose$i(chain.subtables), _step7; !(_step7 = _iterator7()).done;) {\n        var subtable = _step7.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  _proto.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this; // Currently, only supporting ligature subtables.\n\n\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor(_class$2.prototype, \"getStateMachine\", [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, \"getStateMachine\"), _class$2.prototype), _class$2); // reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\n\nfunction swap(glyphs, rangeA, rangeB, reverseA, reverseB) {\n  if (reverseA === void 0) {\n    reverseA = false;\n  }\n\n  if (reverseB === void 0) {\n    reverseB = false;\n  }\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(\"Unknown verb: \" + verb);\n  }\n}\n\nfunction _createForOfIteratorHelperLoose$h(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$h(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$h(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$h(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$h(o, minLen);\n}\n\nfunction _arrayLikeToArray$h(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar AATLayoutEngine = /*#__PURE__*/function () {\n  function AATLayoutEngine(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  var _proto = AATLayoutEngine.prototype;\n\n  _proto.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = _createForOfIteratorHelperLoose$h(glyphStrings), _step; !(_step = _iterator()).done;) {\n      var glyphs = _step.value;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  _proto._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$h(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      var s = string + String.fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$g(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$g(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$g(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$g(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$g(o, minLen);\n}\n\nfunction _arrayLikeToArray$g(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\n\nvar ShapingPlan = /*#__PURE__*/function () {\n  function ShapingPlan(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  var _proto = ShapingPlan.prototype;\n\n  _proto._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = _createForOfIteratorHelperLoose$g(features), _step; !(_step = _iterator()).done;) {\n      var feature = _step.value;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n  /**\n   * Add features to the last stage\n   */\n  ;\n\n  _proto.add = function add(arg, global) {\n    if (global === void 0) {\n      global = true;\n    }\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n  /**\n   * Add a new stage\n   */\n  ;\n\n  _proto.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  _proto.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  ;\n\n  _proto.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose$g(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var glyph = _step2.value;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  ;\n\n  _proto.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose$g(this.stages), _step3; !(_step3 = _iterator3()).done;) {\n      var stage = _step3.value;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = /*#__PURE__*/function () {\n  function DefaultShaper() {}\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}();\n\n_defineProperty(DefaultShaper, \"zeroMarkWidths\", 'AFTER_GPOS');\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 1, 240, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 253, 1, 2, 254, 237, 154, 45, 76, 196, 48, 20, 199, 187, 237, 190, 56, 64, 129, 192, 224, 144, 72, 4, 2, 121, 151, 16, 18, 12, 9, 134, 132, 115, 40, 4, 138, 160, 80, 224, 80, 36, 8, 78, 34, 145, 72, 12, 138, 32, 73, 72, 8, 18, 137, 68, 18, 12, 201, 253, 47, 215, 146, 151, 166, 221, 117, 215, 110, 131, 219, 123, 201, 47, 237, 173, 235, 235, 123, 237, 235, 219, 186, 92, 55, 22, 98, 27, 236, 130, 125, 208, 149, 191, 255, 75, 121, 12, 78, 193, 25, 184, 0, 151, 160, 15, 110, 192, 45, 184, 3, 247, 224, 1, 60, 145, 126, 207, 224, 77, 254, 30, 242, 14, 62, 100, 253, 83, 150, 95, 164, 157, 153, 78, 126, 192, 181, 164, 158, 8, 49, 15, 22, 146, 242, 237, 42, 138, 37, 248, 186, 44, 253, 93, 169, 144, 223, 12, 195, 48, 12, 195, 48, 12, 195, 48, 12, 195, 84, 143, 225, 247, 159, 85, 254, 254, 193, 48, 12, 195, 48, 12, 195, 48, 185, 114, 53, 51, 98, 49, 39, 94, 193, 92, 91, 136, 14, 56, 7, 143, 224, 187, 61, 106, 91, 159, 21, 98, 83, 8, 209, 107, 9, 209, 111, 141, 234, 69, 240, 210, 202, 111, 62, 215, 112, 134, 217, 48, 156, 99, 58, 184, 182, 149, 225, 124, 179, 131, 123, 247, 60, 207, 67, 61, 244, 63, 176, 232, 56, 196, 245, 163, 138, 156, 183, 212, 255, 11, 78, 166, 212, 223, 78, 28, 253, 194, 194, 82, 101, 137, 44, 208, 118, 83, 61, 148, 212, 164, 222, 68, 163, 102, 40, 117, 76, 125, 178, 66, 251, 253, 37, 161, 54, 81, 31, 245, 185, 114, 241, 47, 4, 147, 204, 109, 17, 36, 90, 221, 197, 15, 83, 92, 169, 118, 65, 74, 155, 132, 216, 7, 116, 60, 23, 161, 62, 211, 107, 62, 210, 4, 117, 131, 254, 134, 36, 109, 253, 93, 99, 34, 33, 58, 245, 126, 13, 79, 251, 149, 100, 141, 207, 80, 113, 61, 110, 110, 76, 237, 227, 198, 117, 149, 178, 247, 157, 111, 236, 217, 250, 143, 203, 245, 89, 98, 143, 222, 107, 122, 182, 217, 236, 138, 12, 122, 84, 222, 213, 115, 69, 104, 153, 36, 134, 169, 109, 166, 24, 211, 245, 154, 230, 79, 151, 178, 223, 140, 213, 26, 40, 209, 109, 12, 101, 95, 217, 251, 196, 244, 238, 213, 148, 20, 185, 143, 125, 247, 115, 154, 127, 121, 234, 14, 169, 203, 53, 71, 248, 72, 168, 53, 139, 39, 180, 211, 150, 75, 34, 173, 84, 245, 72, 142, 229, 242, 78, 24, 167, 232, 55, 141, 167, 198, 114, 181, 53, 68, 206, 165, 246, 216, 124, 209, 115, 169, 158, 83, 125, 237, 176, 205, 99, 136, 184, 179, 173, 65, 209, 40, 191, 138, 150, 180, 184, 115, 37, 235, 58, 132, 142, 81, 95, 9, 153, 191, 76, 207, 10, 155, 52, 3, 142, 107, 147, 1];\nvar trieData$2 = {\n  type: type$2,\n  data: data$2\n};\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE$1 = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type = getShapingClass(glyph.codePoints[0]);\n\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie$2.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = /*#__PURE__*/function () {\n  function GlyphIterator(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  var _proto = GlyphIterator.prototype;\n\n  _proto.reset = function reset(options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  _proto.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  _proto.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _proto.next = function next() {\n    return this.move(+1);\n  };\n\n  _proto.prev = function prev() {\n    return this.move(-1);\n  };\n\n  _proto.peek = function peek(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  _proto.peekIndex = function peekIndex(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  _proto.increment = function increment(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n\n  return GlyphIterator;\n}();\n\nfunction _createForOfIteratorHelperLoose$f(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$f(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$f(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$f(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$f(o, minLen);\n}\n\nfunction _arrayLikeToArray$f(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = /*#__PURE__*/function () {\n  function OTProcessor(font, table) {\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  var _proto = OTProcessor.prototype;\n\n  _proto.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose$f(script), _step; !(_step = _iterator()).done;) {\n      var s = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$f(this.table.scriptList), _step2; !(_step2 = _iterator2()).done;) {\n        var entry = _step2.value;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.selectScript = function selectScript(script, language, direction$1) {\n    var changed = false;\n    var entry;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$1 || direction$1 !== this.direction) {\n      this.direction = direction$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$f(this.script.langSysRecords), _step3; !(_step3 = _iterator3()).done;) {\n        var lang = _step3.value;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = _createForOfIteratorHelperLoose$f(this.language.featureIndexes), _step4; !(_step4 = _iterator4()).done;) {\n          var featureIndex = _step4.value;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  _proto.lookupsForFeatures = function lookupsForFeatures(userFeatures, exclude) {\n    if (userFeatures === void 0) {\n      userFeatures = [];\n    }\n\n    var lookups = [];\n\n    for (var _iterator5 = _createForOfIteratorHelperLoose$f(userFeatures), _step5; !(_step5 = _iterator5()).done;) {\n      var tag = _step5.value;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = _createForOfIteratorHelperLoose$f(feature.lookupListIndexes), _step6; !(_step6 = _iterator6()).done;) {\n        var lookupIndex = _step6.value;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  _proto.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = _createForOfIteratorHelperLoose$f(substitutions), _step7; !(_step7 = _iterator7()).done;) {\n      var substitution = _step7.value;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  _proto.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  _proto.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = _createForOfIteratorHelperLoose$f(lookups), _step8; !(_step8 = _iterator8()).done;) {\n      var _step8$value = _step8.value,\n          feature = _step8$value.feature,\n          lookup = _step8$value.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = _createForOfIteratorHelperLoose$f(lookup.subTables), _step9; !(_step9 = _iterator9()).done;) {\n          var table = _step9.value;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  _proto.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  _proto.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = _createForOfIteratorHelperLoose$f(lookupRecords), _step10; !(_step10 = _iterator10()).done;) {\n      var lookupRecord = _step10.value; // Reset flags and find glyph index for this lookup record\n\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = _createForOfIteratorHelperLoose$f(lookup.subTables), _step11; !(_step11 = _iterator11()).done;) {\n        var table = _step11.value;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  _proto.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = _createForOfIteratorHelperLoose$f(coverage.rangeRecords), _step12; !(_step12 = _iterator12()).done;) {\n          var range = _step12.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  _proto.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  _proto.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  _proto.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  _proto.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  _proto.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = _createForOfIteratorHelperLoose$f(classDef.classRangeRecord), _step13; !(_step13 = _iterator13()).done;) {\n          var range = _step13.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  _proto.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  _proto.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.ruleSets[index];\n\n        for (var _iterator14 = _createForOfIteratorHelperLoose$f(set), _step14; !(_step14 = _iterator14()).done;) {\n          var rule = _step14.value;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n\n        for (var _iterator15 = _createForOfIteratorHelperLoose$f(set), _step15; !(_step15 = _iterator15()).done;) {\n          var _rule = _step15.value;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  _proto.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.chainRuleSets[index];\n\n        for (var _iterator16 = _createForOfIteratorHelperLoose$f(set), _step16; !(_step16 = _iterator16()).done;) {\n          var rule = _step16.value;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = _createForOfIteratorHelperLoose$f(rules), _step17; !(_step17 = _iterator17()).done;) {\n          var _rule2 = _step17.value;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = /*#__PURE__*/function () {\n  function GlyphInfo(font, id, codePoints, features) {\n    if (codePoints === void 0) {\n      codePoints = [];\n    }\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  var _proto = GlyphInfo.prototype;\n\n  _proto.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  };\n\n  _createClass(GlyphInfo, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }]);\n\n  return GlyphInfo;\n}();\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\n\nvar HangulShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper);\n\n_defineProperty(HangulShaper, \"zeroMarkWidths\", 'NONE');\n\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return 1 <= code && code <= T_END;\n}; // Character categories\n\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n} // State machine actions\n\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv, ljmo, vjmo, tjmo;\n\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting$1 = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n  stateTable: stateTable$1,\n  accepting: accepting$1,\n  tags: tags$1\n};\nvar categories$1 = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"null\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"M\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$2 = {\n  \"2507\": [2503, 2494],\n  \"2508\": [2503, 2519],\n  \"2888\": [2887, 2902],\n  \"2891\": [2887, 2878],\n  \"2892\": [2887, 2903],\n  \"3018\": [3014, 3006],\n  \"3019\": [3015, 3006],\n  \"3020\": [3014, 3031],\n  \"3144\": [3142, 3158],\n  \"3264\": [3263, 3285],\n  \"3271\": [3270, 3285],\n  \"3272\": [3270, 3286],\n  \"3274\": [3270, 3266],\n  \"3275\": [3270, 3266, 3285],\n  \"3402\": [3398, 3390],\n  \"3403\": [3399, 3390],\n  \"3404\": [3398, 3415],\n  \"3546\": [3545, 3530],\n  \"3548\": [3545, 3535],\n  \"3549\": [3545, 3535, 3530],\n  \"3550\": [3545, 3551],\n  \"3635\": [3661, 3634],\n  \"3763\": [3789, 3762],\n  \"3955\": [3953, 3954],\n  \"3957\": [3953, 3956],\n  \"3958\": [4018, 3968],\n  \"3959\": [4018, 3953, 3968],\n  \"3960\": [4019, 3968],\n  \"3961\": [4019, 3953, 3968],\n  \"3969\": [3953, 3968],\n  \"6971\": [6970, 6965],\n  \"6973\": [6972, 6965],\n  \"6976\": [6974, 6965],\n  \"6977\": [6975, 6965],\n  \"6979\": [6978, 6965],\n  \"69934\": [69937, 69927],\n  \"69935\": [69938, 69927],\n  \"70475\": [70471, 70462],\n  \"70476\": [70471, 70487],\n  \"70843\": [70841, 70842],\n  \"70844\": [70841, 70832],\n  \"70846\": [70841, 70845],\n  \"71098\": [71096, 71087],\n  \"71099\": [71097, 71087]\n};\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n  categories: categories$1,\n  decompositions: decompositions$2,\n  stateTable: stateTable,\n  accepting: accepting,\n  tags: tags\n}; // Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\n\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 216, 96, 1, 102, 15, 153, 240, 237, 157, 123, 140, 92, 85, 29, 199, 239, 238, 206, 206, 204, 238, 204, 238, 116, 11, 68, 8, 98, 81, 32, 196, 80, 109, 64, 34, 182, 20, 22, 144, 96, 10, 137, 88, 77, 164, 85, 81, 68, 9, 136, 65, 80, 131, 144, 54, 8, 8, 106, 45, 32, 15, 65, 76, 44, 252, 33, 229, 47, 138, 254, 193, 67, 99, 193, 180, 18, 17, 44, 16, 80, 33, 96, 20, 176, 168, 53, 4, 172, 81, 2, 162, 32, 126, 207, 220, 115, 230, 158, 57, 115, 222, 143, 123, 103, 101, 126, 201, 39, 247, 113, 206, 61, 231, 119, 126, 191, 243, 190, 119, 103, 151, 212, 178, 236, 96, 176, 12, 28, 1, 78, 6, 167, 128, 79, 128, 207, 130, 119, 131, 247, 70, 56, 158, 14, 206, 6, 95, 2, 235, 28, 158, 91, 15, 46, 3, 27, 192, 53, 224, 187, 224, 102, 176, 25, 108, 1, 119, 130, 123, 52, 207, 95, 0, 46, 6, 63, 7, 191, 2, 247, 131, 71, 192, 19, 224, 105, 176, 4, 252, 5, 252, 13, 188, 12, 230, 193, 127, 65, 125, 50, 15, 155, 197, 113, 79, 240, 86, 112, 32, 88, 10, 14, 3, 43, 192, 113, 224, 68, 240, 33, 176, 6, 156, 6, 206, 2, 95, 0, 95, 1, 95, 5, 223, 0, 87, 130, 235, 193, 38, 176, 25, 108, 1, 119, 130, 173, 224, 62, 240, 32, 120, 12, 60, 5, 254, 8, 118, 129, 221, 224, 21, 240, 6, 152, 172, 103, 217, 12, 216, 11, 236, 7, 14, 4, 75, 193, 225, 96, 37, 56, 22, 172, 170, 231, 186, 175, 198, 113, 13, 56, 141, 94, 159, 133, 227, 121, 224, 66, 112, 17, 184, 28, 92, 1, 190, 67, 195, 191, 143, 227, 45, 224, 54, 112, 7, 216, 90, 207, 203, 125, 31, 61, 218, 242, 32, 141, 255, 24, 142, 191, 4, 79, 209, 235, 199, 233, 241, 58, 240, 12, 206, 31, 226, 158, 217, 229, 152, 135, 13, 207, 112, 105, 238, 198, 249, 43, 224, 13, 208, 104, 100, 89, 7, 188, 5, 44, 1, 7, 131, 101, 224, 136, 70, 127, 124, 114, 156, 167, 247, 30, 6, 31, 192, 249, 201, 224, 20, 240, 169, 70, 110, 175, 51, 113, 60, 151, 198, 185, 128, 222, 187, 24, 199, 111, 130, 171, 27, 121, 125, 154, 167, 220, 136, 235, 77, 96, 51, 184, 13, 220, 1, 182, 210, 103, 238, 163, 199, 29, 56, 254, 134, 166, 247, 84, 131, 218, 10, 199, 63, 55, 244, 101, 125, 209, 16, 206, 219, 248, 37, 196, 221, 65, 239, 221, 13, 94, 195, 117, 173, 153, 101, 237, 102, 17, 119, 15, 156, 239, 75, 175, 79, 2, 7, 52, 7, 211, 59, 68, 114, 47, 148, 195, 154, 121, 219, 115, 121, 102, 69, 2, 61, 82, 115, 52, 116, 62, 94, 162, 247, 243, 224, 90, 73, 252, 19, 105, 92, 214, 22, 87, 227, 122, 45, 248, 52, 133, 143, 123, 36, 173, 111, 159, 227, 238, 175, 208, 232, 66, 234, 246, 23, 185, 184, 223, 166, 199, 13, 66, 188, 11, 155, 121, 255, 203, 235, 186, 142, 62, 247, 181, 166, 92, 111, 134, 46, 108, 196, 136, 17, 126, 60, 60, 4, 58, 140, 24, 49, 98, 196, 136, 17, 35, 70, 140, 88, 120, 28, 57, 4, 58, 136, 60, 71, 215, 186, 223, 114, 88, 223, 175, 84, 220, 95, 174, 121, 230, 90, 164, 127, 61, 216, 4, 54, 131, 45, 224, 78, 112, 15, 216, 14, 30, 0, 143, 130, 39, 193, 179, 96, 87, 51, 223, 91, 218, 141, 227, 63, 193, 127, 192, 196, 84, 150, 181, 192, 28, 216, 7, 188, 125, 42, 223, 207, 121, 39, 142, 135, 130, 229, 224, 88, 112, 6, 45, 203, 102, 46, 255, 85, 184, 191, 122, 170, 122, 123, 143, 24, 49, 98, 196, 155, 9, 178, 111, 185, 22, 125, 239, 251, 106, 197, 62, 125, 85, 84, 109, 139, 17, 35, 70, 196, 225, 4, 110, 206, 74, 222, 115, 206, 131, 211, 208, 207, 156, 5, 206, 19, 230, 122, 23, 58, 206, 253, 78, 162, 199, 121, 154, 199, 81, 224, 146, 169, 226, 125, 234, 6, 156, 95, 45, 164, 121, 195, 84, 241, 94, 135, 135, 188, 151, 185, 9, 97, 183, 14, 193, 252, 243, 181, 69, 57, 43, 231, 96, 35, 240, 147, 69, 102, 54, 32, 222, 3, 138, 184, 47, 224, 254, 254, 139, 179, 108, 13, 184, 6, 60, 186, 184, 63, 252, 247, 8, 111, 238, 145, 101, 123, 131, 53, 224, 146, 233, 44, 219, 6, 178, 86, 150, 29, 3, 46, 33, 71, 114, 143, 30, 119, 210, 35, 207, 59, 218, 89, 246, 189, 177, 156, 211, 113, 254, 131, 246, 96, 156, 157, 184, 55, 62, 83, 92, 31, 135, 243, 75, 193, 118, 48, 54, 139, 117, 1, 184, 116, 182, 72, 39, 22, 219, 105, 154, 175, 226, 184, 188, 147, 159, 31, 223, 233, 143, 179, 174, 147, 235, 244, 211, 206, 160, 222, 35, 70, 140, 24, 49, 162, 28, 254, 93, 113, 31, 28, 123, 252, 113, 97, 197, 162, 234, 243, 159, 175, 189, 185, 185, 28, 220, 142, 121, 224, 93, 83, 131, 235, 81, 242, 157, 207, 189, 184, 191, 141, 155, 39, 222, 143, 243, 71, 166, 242, 249, 232, 14, 73, 122, 236, 251, 187, 39, 232, 250, 154, 156, 63, 61, 149, 127, 83, 71, 210, 219, 73, 211, 122, 94, 146, 223, 18, 154, 230, 63, 16, 246, 50, 247, 60, 219, 55, 125, 125, 202, 111, 253, 76, 190, 153, 34, 223, 76, 28, 37, 209, 119, 18, 109, 160, 9, 22, 77, 23, 115, 227, 189, 167, 243, 176, 253, 113, 60, 24, 44, 155, 238, 207, 239, 136, 233, 98, 30, 62, 143, 243, 19, 192, 7, 167, 139, 252, 88, 188, 143, 210, 123, 159, 156, 206, 191, 251, 58, 3, 199, 207, 131, 47, 79, 15, 234, 191, 126, 186, 184, 94, 70, 211, 190, 140, 62, 191, 113, 218, 236, 199, 121, 170, 187, 204, 62, 196, 126, 15, 73, 194, 136, 93, 174, 67, 218, 55, 130, 155, 193, 45, 224, 54, 240, 35, 240, 99, 112, 47, 248, 5, 120, 8, 252, 22, 252, 14, 236, 4, 187, 192, 110, 240, 10, 120, 3, 212, 90, 69, 154, 109, 156, 239, 9, 246, 5, 7, 128, 67, 192, 161, 96, 57, 56, 182, 53, 168, 195, 189, 208, 97, 21, 238, 175, 166, 97, 107, 113, 60, 21, 156, 33, 137, 203, 226, 159, 131, 176, 243, 91, 197, 245, 69, 56, 255, 58, 184, 10, 252, 12, 215, 55, 224, 120, 19, 13, 191, 21, 199, 219, 21, 105, 17, 72, 252, 187, 90, 131, 54, 35, 156, 42, 169, 111, 221, 60, 17, 127, 59, 120, 16, 60, 6, 30, 7, 127, 104, 229, 123, 255, 127, 194, 241, 133, 86, 254, 252, 238, 186, 217, 103, 47, 33, 238, 171, 96, 12, 235, 133, 58, 104, 129, 185, 118, 17, 190, 15, 206, 247, 3, 7, 129, 119, 129, 247, 180, 139, 178, 153, 56, 178, 173, 14, 35, 250, 189, 191, 93, 254, 122, 79, 172, 135, 124, 216, 73, 26, 125, 142, 182, 40, 175, 15, 101, 151, 95, 198, 71, 52, 126, 42, 139, 88, 101, 33, 223, 242, 86, 149, 63, 105, 111, 164, 15, 252, 56, 103, 79, 50, 78, 125, 134, 171, 87, 103, 226, 252, 156, 118, 241, 189, 108, 42, 59, 174, 107, 202, 239, 159, 79, 117, 89, 207, 233, 120, 116, 68, 251, 47, 68, 116, 239, 105, 99, 176, 204, 179, 78, 150, 137, 169, 12, 108, 108, 191, 12, 245, 102, 163, 99, 191, 61, 12, 239, 57, 92, 202, 127, 13, 202, 119, 67, 59, 93, 159, 239, 106, 127, 246, 189, 237, 149, 138, 240, 245, 220, 220, 111, 147, 164, 47, 231, 191, 195, 39, 115, 46, 217, 188, 128, 133, 223, 77, 143, 228, 239, 154, 54, 35, 173, 45, 212, 215, 119, 224, 248, 67, 176, 213, 193, 247, 47, 90, 252, 125, 205, 49, 9, 254, 142, 98, 27, 116, 124, 96, 8, 198, 52, 91, 30, 133, 174, 79, 26, 230, 74, 207, 182, 251, 199, 21, 219, 58, 181, 204, 114, 238, 94, 37, 42, 63, 254, 181, 221, 31, 254, 247, 18, 124, 250, 47, 90, 191, 95, 231, 242, 34, 239, 48, 100, 107, 77, 6, 105, 35, 147, 51, 89, 54, 3, 246, 2, 251, 129, 131, 102, 242, 176, 165, 51, 118, 229, 231, 255, 174, 137, 180, 215, 141, 224, 240, 153, 188, 237, 63, 199, 181, 35, 118, 126, 21, 157, 131, 175, 68, 156, 227, 103, 242, 62, 246, 196, 25, 121, 251, 87, 217, 55, 53, 68, 247, 15, 207, 244, 223, 227, 251, 34, 210, 15, 173, 228, 202, 190, 145, 246, 99, 100, 189, 248, 49, 206, 110, 151, 115, 207, 156, 78, 211, 59, 27, 199, 43, 106, 131, 105, 159, 139, 251, 231, 91, 216, 124, 152, 168, 202, 63, 169, 89, 219, 252, 255, 46, 31, 207, 235, 154, 113, 113, 71, 73, 58, 12, 43, 191, 174, 56, 255, 71, 20, 251, 40, 101, 18, 90, 6, 221, 248, 179, 16, 184, 72, 24, 7, 92, 236, 147, 106, 173, 188, 144, 252, 191, 144, 33, 117, 247, 109, 181, 177, 46, 157, 44, 91, 112, 144, 253, 101, 254, 220, 134, 170, 117, 30, 86, 222, 236, 82, 181, 253, 163, 213, 77, 250, 123, 22, 11, 66, 215, 33, 134, 137, 41, 220, 20, 175, 195, 133, 155, 226, 249, 234, 89, 181, 173, 22, 90, 57, 108, 124, 54, 76, 200, 244, 93, 72, 250, 235, 202, 164, 146, 42, 117, 241, 213, 185, 42, 253, 135, 189, 78, 84, 105, 147, 178, 235, 142, 173, 84, 173, 247, 66, 245, 127, 140, 180, 170, 176, 63, 175, 183, 107, 254, 41, 36, 85, 25, 23, 74, 89, 102, 155, 253, 212, 198, 35, 48, 22, 145, 69, 118, 241, 166, 26, 57, 205, 9, 148, 99, 113, 126, 62, 222, 40, 238, 187, 208, 172, 21, 207, 118, 109, 52, 77, 161, 54, 226, 227, 26, 117, 163, 54, 153, 226, 210, 35, 184, 174, 211, 189, 109, 221, 234, 247, 111, 166, 75, 139, 194, 68, 117, 237, 234, 195, 238, 179, 26, 255, 178, 112, 94, 100, 105, 16, 97, 254, 109, 83, 255, 182, 37, 254, 99, 50, 78, 227, 48, 105, 211, 248, 196, 191, 98, 126, 50, 105, 55, 6, 239, 13, 148, 73, 240, 111, 47, 158, 165, 127, 89, 253, 118, 105, 175, 228, 200, 231, 101, 235, 223, 129, 178, 148, 236, 95, 49, 174, 120, 78, 132, 248, 151, 217, 158, 249, 151, 33, 243, 79, 91, 225, 95, 94, 72, 219, 213, 137, 170, 60, 218, 103, 44, 253, 219, 235, 87, 199, 10, 63, 215, 230, 220, 198, 0, 215, 246, 203, 124, 170, 188, 46, 201, 191, 182, 237, 87, 132, 213, 109, 214, 166, 152, 143, 101, 254, 13, 29, 75, 153, 77, 196, 186, 228, 218, 63, 107, 243, 24, 227, 198, 16, 80, 159, 40, 32, 210, 88, 32, 253, 179, 171, 127, 39, 45, 250, 231, 73, 139, 246, 43, 147, 73, 69, 159, 16, 187, 127, 238, 100, 69, 187, 13, 153, 199, 177, 126, 187, 155, 183, 69, 255, 172, 107, 203, 170, 177, 146, 157, 139, 247, 100, 241, 196, 123, 202, 251, 150, 243, 47, 81, 248, 182, 44, 235, 191, 217, 216, 60, 46, 180, 109, 66, 221, 178, 125, 203, 252, 175, 146, 20, 239, 69, 100, 34, 206, 167, 109, 230, 212, 93, 253, 12, 254, 142, 217, 158, 93, 253, 73, 218, 51, 249, 125, 104, 17, 190, 77, 241, 247, 197, 235, 186, 161, 61, 243, 207, 233, 234, 20, 111, 23, 254, 25, 23, 255, 234, 196, 103, 189, 164, 157, 155, 15, 129, 127, 85, 113, 153, 176, 254, 218, 198, 191, 252, 53, 59, 183, 241, 175, 216, 247, 202, 164, 167, 107, 4, 255, 118, 58, 57, 62, 34, 250, 151, 215, 169, 44, 255, 106, 177, 108, 191, 4, 102, 119, 54, 30, 171, 32, 98, 234, 143, 187, 54, 85, 248, 141, 209, 110, 232, 219, 14, 111, 147, 208, 249, 150, 9, 83, 191, 230, 58, 159, 182, 157, 115, 203, 236, 18, 3, 171, 52, 37, 107, 105, 219, 62, 94, 214, 134, 85, 251, 35, 44, 140, 29, 217, 94, 137, 108, 191, 69, 37, 174, 253, 53, 191, 127, 226, 42, 177, 125, 225, 11, 91, 183, 219, 34, 10, 121, 158, 111, 167, 227, 141, 254, 125, 42, 114, 228, 215, 22, 132, 110, 251, 111, 22, 113, 98, 172, 107, 196, 58, 169, 178, 113, 10, 219, 155, 242, 12, 177, 119, 119, 63, 111, 46, 135, 137, 204, 222, 204, 23, 68, 68, 123, 215, 179, 162, 95, 201, 28, 236, 173, 170, 171, 41, 246, 167, 121, 154, 20, 101, 63, 106, 187, 143, 229, 80, 175, 248, 250, 218, 161, 54, 20, 243, 37, 38, 153, 176, 240, 113, 138, 58, 166, 235, 39, 51, 143, 58, 197, 218, 32, 107, 135, 100, 60, 38, 245, 164, 174, 210, 125, 206, 158, 110, 249, 29, 226, 167, 128, 181, 7, 29, 252, 222, 183, 108, 29, 229, 83, 119, 101, 82, 117, 31, 223, 197, 114, 190, 160, 170, 43, 178, 113, 148, 212, 157, 238, 92, 157, 172, 57, 102, 251, 251, 170, 30, 36, 111, 151, 125, 13, 174, 159, 231, 247, 58, 100, 101, 24, 232, 39, 117, 117, 118, 44, 143, 211, 154, 200, 97, 113, 216, 179, 236, 62, 15, 159, 150, 49, 47, 27, 230, 6, 109, 41, 203, 151, 208, 164, 249, 119, 245, 176, 180, 31, 123, 86, 124, 175, 99, 170, 227, 50, 233, 8, 231, 161, 200, 210, 177, 73, 63, 11, 124, 62, 52, 255, 212, 229, 243, 73, 183, 12, 120, 73, 157, 135, 111, 120, 170, 242, 138, 226, 179, 110, 238, 62, 39, 220, 179, 89, 131, 196, 202, 95, 6, 159, 191, 77, 185, 83, 229, 239, 42, 49, 236, 79, 196, 59, 255, 178, 198, 104, 155, 125, 148, 8, 123, 2, 204, 247, 186, 253, 23, 17, 126, 173, 209, 219, 131, 161, 99, 127, 247, 124, 38, 135, 221, 151, 165, 65, 230, 8, 166, 253, 24, 2, 219, 27, 234, 217, 63, 112, 31, 53, 180, 15, 40, 171, 255, 142, 145, 127, 108, 253, 9, 93, 251, 150, 213, 6, 36, 237, 216, 101, 141, 204, 175, 147, 153, 176, 251, 221, 247, 30, 154, 53, 131, 110, 143, 67, 102, 79, 235, 53, 102, 76, 155, 120, 236, 253, 185, 142, 119, 3, 246, 243, 240, 25, 47, 170, 245, 4, 191, 87, 164, 90, 99, 200, 252, 43, 194, 230, 189, 74, 253, 29, 246, 2, 164, 126, 78, 88, 191, 101, 101, 143, 146, 191, 170, 94, 176, 112, 137, 29, 187, 107, 127, 217, 58, 122, 214, 111, 127, 65, 181, 47, 72, 218, 225, 192, 30, 213, 68, 255, 179, 124, 221, 9, 237, 255, 67, 159, 231, 223, 189, 176, 49, 207, 123, 252, 77, 80, 135, 68, 219, 153, 252, 33, 222, 111, 213, 244, 233, 251, 218, 211, 103, 172, 33, 117, 176, 153, 21, 123, 81, 50, 92, 199, 65, 107, 191, 165, 28, 203, 36, 227, 140, 204, 23, 164, 173, 245, 237, 157, 140, 217, 219, 155, 204, 155, 164, 121, 42, 250, 6, 219, 122, 99, 26, 31, 69, 25, 152, 63, 40, 108, 161, 171, 147, 186, 254, 158, 223, 183, 108, 78, 232, 243, 118, 25, 167, 251, 234, 56, 167, 111, 232, 252, 201, 52, 222, 166, 76, 155, 8, 255, 157, 87, 71, 184, 182, 102, 177, 128, 228, 30, 179, 23, 9, 227, 207, 25, 170, 62, 54, 134, 125, 109, 237, 100, 218, 243, 213, 233, 99, 171, 111, 102, 56, 234, 158, 9, 241, 127, 138, 180, 109, 243, 179, 205, 195, 75, 151, 73, 80, 47, 174, 99, 140, 53, 62, 122, 244, 202, 109, 177, 134, 149, 210, 200, 156, 255, 6, 216, 215, 119, 188, 132, 250, 219, 244, 173, 178, 73, 66, 116, 143, 161, 191, 46, 237, 20, 226, 170, 83, 173, 29, 183, 140, 202, 122, 155, 152, 84, 249, 132, 218, 88, 39, 161, 245, 162, 44, 155, 250, 234, 80, 117, 120, 108, 91, 248, 218, 72, 39, 101, 215, 199, 212, 245, 35, 212, 62, 195, 84, 127, 93, 242, 72, 81, 55, 92, 197, 70, 95, 254, 253, 53, 191, 254, 172, 75, 214, 225, 252, 223, 233, 164, 220, 127, 146, 189, 27, 82, 217, 48, 212, 247, 73, 215, 217, 58, 76, 235, 253, 113, 205, 154, 89, 182, 134, 29, 43, 190, 183, 118, 169, 115, 209, 254, 174, 53, 225, 94, 133, 203, 62, 31, 249, 219, 24, 254, 251, 50, 149, 244, 234, 127, 232, 126, 156, 207, 250, 213, 102, 77, 75, 209, 181, 91, 151, 253, 200, 210, 235, 179, 132, 230, 68, 65, 175, 28, 137, 251, 15, 221, 62, 142, 235, 251, 215, 14, 215, 94, 180, 123, 120, 42, 187, 68, 182, 185, 110, 207, 140, 223, 203, 234, 123, 63, 81, 243, 31, 215, 66, 218, 139, 206, 223, 172, 159, 183, 42, 119, 64, 125, 207, 50, 77, 253, 76, 221, 62, 44, 234, 169, 184, 255, 40, 123, 255, 97, 146, 144, 111, 20, 51, 15, 255, 14, 244, 75, 129, 182, 25, 72, 67, 177, 175, 66, 194, 90, 244, 93, 141, 248, 125, 92, 108, 223, 168, 222, 13, 138, 247, 217, 119, 186, 236, 152, 90, 116, 243, 57, 155, 178, 202, 202, 36, 75, 147, 125, 83, 25, 162, 151, 105, 110, 236, 18, 174, 19, 111, 223, 243, 118, 179, 237, 15, 12, 109, 202, 52, 30, 145, 50, 177, 111, 36, 123, 250, 7, 206, 71, 92, 230, 192, 161, 107, 29, 223, 57, 183, 139, 238, 174, 101, 140, 173, 191, 238, 126, 166, 136, 91, 166, 142, 190, 182, 150, 73, 21, 249, 134, 150, 183, 12, 127, 135, 60, 111, 83, 222, 216, 229, 8, 177, 165, 201, 174, 41, 194, 77, 246, 177, 181, 147, 173, 248, 214, 39, 83, 120, 72, 125, 9, 77, 219, 70, 127, 215, 231, 109, 236, 150, 170, 46, 198, 200, 207, 39, 13, 89, 153, 171, 148, 216, 54, 13, 205, 191, 44, 157, 83, 249, 62, 150, 174, 182, 18, 154, 94, 10, 187, 184, 164, 239, 34, 49, 218, 138, 73, 15, 157, 111, 83, 213, 31, 85, 25, 171, 168, 191, 46, 254, 137, 89, 143, 67, 242, 8, 181, 121, 138, 188, 92, 116, 170, 34, 255, 170, 202, 111, 202, 147, 172, 123, 39, 133, 111, 99, 201, 145, 255, 157, 42, 94, 88, 60, 241, 119, 222, 250, 246, 228, 52, 215, 169, 96, 82, 231, 246, 164, 7, 202, 62, 27, 182, 22, 151, 217, 47, 102, 27, 246, 201, 203, 54, 95, 223, 52, 135, 169, 93, 165, 44, 143, 139, 205, 92, 37, 212, 103, 190, 105, 199, 202, 35, 52, 255, 20, 62, 240, 45, 107, 104, 58, 125, 191, 133, 213, 201, 25, 186, 119, 172, 134, 253, 111, 25, 117, 195, 123, 36, 81, 172, 223, 219, 4, 244, 181, 38, 233, 126, 151, 238, 243, 91, 206, 145, 237, 107, 250, 221, 101, 242, 14, 155, 127, 71, 26, 218, 70, 59, 194, 249, 48, 183, 59, 173, 127, 74, 168, 255, 166, 182, 160, 243, 29, 251, 219, 36, 34, 190, 127, 151, 194, 231, 107, 35, 101, 246, 19, 98, 157, 180, 145, 40, 191, 157, 158, 208, 191, 174, 191, 129, 78, 222, 159, 235, 190, 203, 32, 176, 191, 5, 225, 223, 243, 244, 252, 229, 89, 47, 120, 155, 199, 234, 75, 125, 250, 212, 88, 190, 234, 166, 149, 96, 124, 34, 245, 140, 248, 136, 125, 159, 161, 178, 35, 251, 142, 92, 167, 63, 211, 81, 166, 171, 175, 254, 62, 207, 235, 218, 90, 213, 109, 200, 5, 246, 119, 82, 198, 241, 111, 66, 221, 255, 133, 214, 105, 223, 223, 175, 228, 227, 13, 216, 62, 178, 239, 249, 112, 85, 92, 34, 108, 221, 202, 254, 159, 131, 10, 38, 226, 239, 253, 243, 125, 26, 19, 93, 93, 83, 249, 164, 147, 13, 246, 241, 98, 222, 186, 111, 223, 250, 252, 99, 8, 55, 73, 138, 122, 235, 51, 78, 176, 239, 16, 25, 204, 79, 166, 121, 145, 75, 253, 102, 190, 98, 99, 142, 237, 239, 237, 166, 236, 35, 108, 108, 165, 10, 239, 179, 87, 77, 110, 51, 163, 255, 3, 251, 135, 84, 101, 103, 34, 134, 203, 202, 28, 115, 141, 60, 80, 191, 4, 159, 139, 250, 197, 240, 191, 43, 124, 249, 217, 124, 201, 119, 173, 147, 242, 251, 153, 24, 107, 49, 163, 254, 142, 227, 169, 237, 152, 218, 170, 21, 191, 227, 166, 205, 191, 132, 117, 120, 172, 242, 135, 210, 203, 211, 226, 155, 45, 83, 187, 118, 181, 159, 110, 253, 151, 106, 108, 146, 245, 51, 3, 250, 59, 206, 133, 202, 222, 35, 97, 162, 43, 27, 63, 102, 140, 75, 124, 148, 82, 248, 62, 213, 68, 234, 250, 45, 27, 99, 250, 126, 151, 95, 252, 102, 81, 177, 238, 236, 221, 183, 248, 6, 212, 165, 252, 50, 27, 40, 199, 45, 199, 239, 153, 251, 202, 58, 43, 172, 253, 20, 243, 176, 42, 196, 102, 94, 38, 141, 151, 176, 190, 232, 214, 17, 166, 57, 91, 168, 109, 99, 239, 103, 248, 246, 171, 46, 99, 134, 235, 119, 246, 166, 111, 134, 85, 115, 196, 208, 250, 196, 135, 247, 206, 75, 172, 71, 188, 136, 245, 137, 157, 243, 235, 37, 22, 214, 109, 191, 157, 194, 126, 49, 234, 143, 171, 253, 164, 182, 75, 188, 55, 169, 107, 127, 252, 185, 216, 207, 105, 237, 19, 75, 199, 214, 224, 220, 200, 166, 173, 199, 90, 199, 248, 72, 140, 60, 67, 117, 73, 145, 191, 139, 62, 190, 246, 141, 53, 70, 134, 250, 59, 180, 62, 196, 182, 117, 140, 122, 27, 43, 173, 84, 250, 149, 149, 190, 141, 132, 166, 229, 170, 207, 48, 250, 62, 134, 190, 166, 248, 101, 139, 76, 39, 241, 154, 191, 239, 99, 51, 155, 103, 125, 210, 142, 85, 55, 92, 125, 100, 171, 179, 109, 56, 47, 169, 108, 20, 34, 41, 252, 21, 42, 101, 212, 37, 215, 188, 84, 113, 83, 72, 168, 205, 83, 216, 36, 52, 109, 23, 123, 133, 166, 25, 250, 92, 12, 137, 81, 71, 67, 237, 40, 211, 39, 203, 250, 159, 215, 213, 109, 83, 155, 144, 165, 169, 211, 77, 101, 115, 213, 81, 150, 167, 78, 127, 155, 244, 100, 207, 155, 202, 103, 91, 126, 157, 77, 124, 109, 27, 171, 110, 216, 228, 147, 50, 127, 23, 137, 145, 78, 168, 254, 41, 202, 31, 195, 182, 101, 248, 34, 117, 190, 161, 254, 13, 213, 39, 180, 28, 85, 181, 139, 208, 252, 109, 234, 185, 107, 62, 166, 184, 41, 244, 54, 229, 173, 179, 151, 143, 196, 240, 103, 76, 255, 135, 202, 255, 0];\nvar trieData$1 = {\n  type: type$1,\n  data: data$1\n};\n\nfunction _createForOfIteratorHelperLoose$e(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$e(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$e(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$e(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$e(o, minLen);\n}\n\nfunction _arrayLikeToArray$e(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar decompositions$1 = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine$1 = new StateMachine(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions$1[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper);\n\n_defineProperty(IndicShaper, \"zeroMarkWidths\", 'NONE');\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose$e(stateMachine$1.match(glyphs.map(indicCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i = last; _i < start; _i++) {\n        glyphs[_i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable; // Create shaper info\n\n    for (var _i2 = start; _i2 <= end; _i2++) {\n      glyphs[_i2].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i2]), indicPosition(glyphs[_i2]), tags[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose$e(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var _glyph$features;\n\n    var glyph = _step2.value;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo;\n    _glyphs$start$shaperI.category;\n    var syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i3 = start;\n\n      while (_i3 < end && glyphs[_i3].shaperInfo.category === CATEGORIES.Repha) {\n        _i3++;\n      }\n\n      glyphs.splice(_i3++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i4 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i4].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i4])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i4;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i4;\n            } else if (start < _i4 && _info.category === CATEGORIES.ZWJ && glyphs[_i4 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i4 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i5 = base + 1; _i5 < end; _i5++) {\n            if (isConsonant(glyphs[_i5])) {\n              glyphs[_i5].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n\n    for (var _i6 = start; _i6 < base; _i6++) {\n      var _info2 = glyphs[_i6].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n\n    for (var _i7 = base + 1; _i7 < end; _i7++) {\n      if (glyphs[_i7].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i7 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    } // Handle beginning Ra\n\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i8 = base + 1; _i8 < end; _i8++) {\n        if (glyphs[_i8].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i8; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i8) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i8];\n            glyphs.splice.apply(glyphs, [_i8, 0].concat(glyphs.splice(_i8 + 1, _j - _i8)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i9 = start; _i9 < end; _i9++) {\n      var _info3 = glyphs[_i9].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i9; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    var last = base;\n\n    for (var _i10 = base + 1; _i10 < end; _i10++) {\n      if (isConsonant(glyphs[_i10])) {\n        for (var _j3 = last + 1; _j3 < _i10; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i10].shaperInfo.position;\n          }\n        }\n\n        last = _i10;\n      } else if (glyphs[_i10].shaperInfo.category === CATEGORIES.M) {\n        last = _i10;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      if (glyphs[_i11].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i11;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n\n    for (var _i12 = start; _i12 < end && glyphs[_i12].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i12++) {\n      glyphs[_i12].features.rphf = true;\n    } // Pre-base\n\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i13 = start; _i13 < base; _i13++) {\n      glyphs[_i13].features.half = true;\n\n      if (blwf) {\n        glyphs[_i13].features.blwf = true;\n      }\n    } // Post-base\n\n\n    for (var _i14 = base + 1; _i14 < end; _i14++) {\n      glyphs[_i14].features.abvf = true;\n      glyphs[_i14].features.pstf = true;\n      glyphs[_i14].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i15 = start; _i15 + 1 < base; _i15++) {\n        if (glyphs[_i15].shaperInfo.category === CATEGORIES.Ra && glyphs[_i15 + 1].shaperInfo.category === CATEGORIES.H && (_i15 + 1 === base || glyphs[_i15 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i15].features.blwf = true;\n          glyphs[_i15 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i16 = base + 1; _i16 + prefLen - 1 < end; _i16++) {\n        var _g2 = [glyphs[_i16].copy(), glyphs[_i16 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i16++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) {\n            for (; _i16 < end; _i16++) {\n              glyphs[_i16].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n\n    for (var _i17 = start + 1; _i17 < end; _i17++) {\n      if (isJoiner(glyphs[_i17])) {\n        var nonJoiner = glyphs[_i17].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i17;\n\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i18 = base + 1; _i18 < end; _i18++) {\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 === end || !isHalantOrCoeng(glyphs[_i18])) {\n              break;\n            }\n\n            _i18++; // Skip halant.\n\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 < end && isConsonant(glyphs[_i18]) && glyphs[_i18].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i18;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i19 = newPos; _i19 > start; _i19--) {\n          if (glyphs[_i19 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i19 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i20 = base + 1; _i20 < newRephPos; _i20++) {\n            if (glyphs[_i20].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (var _i21 = base + 1; _i21 < end; _i21++) {\n        if (glyphs[_i21].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i21].isLigated && !glyphs[_i21].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i21;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i21;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nvar type = \"Buffer\";\nvar data = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 186, 16, 1, 5, 14, 250, 241, 237, 156, 123, 140, 95, 69, 21, 199, 103, 119, 187, 251, 123, 109, 119, 187, 22, 90, 160, 188, 31, 166, 165, 8, 69, 154, 24, 164, 49, 16, 32, 209, 148, 38, 106, 67, 20, 249, 195, 214, 7, 54, 98, 176, 65, 141, 141, 74, 104, 136, 134, 2, 18, 9, 134, 80, 99, 132, 26, 163, 149, 52, 245, 25, 80, 99, 64, 249, 3, 72, 5, 77, 138, 68, 65, 5, 21, 35, 1, 81, 132, 72, 72, 197, 196, 248, 29, 239, 156, 252, 206, 206, 158, 121, 222, 215, 22, 126, 39, 249, 100, 238, 99, 158, 231, 204, 204, 157, 153, 59, 247, 174, 154, 80, 234, 20, 176, 22, 156, 3, 46, 4, 27, 193, 102, 112, 185, 185, 118, 94, 5, 238, 22, 176, 13, 108, 7, 59, 60, 254, 118, 130, 93, 194, 245, 27, 193, 173, 96, 55, 216, 3, 190, 13, 190, 7, 238, 1, 247, 25, 30, 100, 254, 127, 1, 30, 5, 191, 3, 79, 11, 241, 61, 5, 158, 1, 171, 192, 11, 38, 111, 171, 204, 253, 85, 140, 87, 192, 33, 160, 150, 40, 213, 5, 203, 192, 10, 112, 60, 120, 35, 56, 19, 172, 7, 27, 192, 69, 224, 18, 240, 110, 240, 62, 240, 1, 240, 81, 176, 29, 236, 0, 59, 193, 46, 112, 11, 216, 13, 238, 4, 123, 193, 126, 112, 55, 184, 23, 60, 0, 30, 6, 191, 6, 191, 7, 127, 1, 207, 130, 23, 193, 33, 160, 38, 149, 234, 128, 89, 176, 18, 156, 0, 78, 5, 103, 76, 22, 121, 95, 15, 247, 60, 112, 161, 57, 223, 8, 119, 51, 184, 28, 108, 1, 219, 192, 199, 193, 167, 205, 253, 107, 225, 126, 1, 220, 12, 110, 3, 95, 155, 28, 150, 253, 155, 147, 243, 117, 81, 150, 253, 136, 239, 251, 21, 199, 201, 249, 177, 21, 247, 125, 56, 127, 16, 252, 10, 252, 6, 60, 53, 89, 148, 247, 25, 240, 2, 120, 5, 252, 55, 144, 159, 169, 41, 165, 102, 192, 10, 176, 106, 170, 8, 127, 10, 220, 53, 224, 108, 112, 174, 185, 118, 1, 220, 119, 128, 119, 129, 203, 166, 10, 221, 106, 182, 226, 248, 67, 224, 99, 224, 147, 224, 115, 224, 243, 38, 204, 77, 198, 253, 50, 220, 175, 130, 27, 88, 186, 223, 192, 249, 190, 41, 127, 222, 126, 16, 184, 31, 195, 79, 16, 199, 253, 224, 0, 56, 8, 158, 48, 229, 210, 247, 158, 132, 251, 87, 240, 15, 240, 178, 185, 246, 42, 220, 241, 14, 234, 32, 88, 218, 9, 199, 127, 36, 252, 28, 215, 41, 226, 60, 17, 238, 106, 112, 22, 88, 15, 214, 153, 180, 54, 224, 248, 12, 19, 215, 219, 140, 95, 205, 197, 236, 152, 179, 9, 215, 47, 5, 151, 89, 247, 183, 58, 252, 19, 31, 49, 105, 159, 205, 244, 230, 243, 207, 253, 229, 162, 227, 248, 48, 210, 188, 10, 92, 13, 118, 116, 226, 227, 223, 105, 233, 247, 76, 193, 207, 46, 248, 185, 5, 236, 238, 20, 245, 109, 15, 139, 127, 169, 71, 31, 123, 113, 111, 63, 184, 27, 220, 235, 176, 163, 212, 254, 31, 232, 12, 203, 245, 8, 142, 31, 3, 127, 0, 79, 155, 180, 244, 241, 223, 204, 241, 99, 1, 123, 84, 161, 223, 17, 35, 94, 143, 140, 218, 207, 136, 17, 35, 70, 140, 24, 49, 98, 196, 136, 215, 2, 235, 58, 195, 53, 129, 27, 34, 252, 255, 147, 205, 93, 255, 101, 205, 99, 191, 24, 17, 254, 63, 8, 51, 209, 45, 214, 97, 6, 112, 151, 131, 21, 224, 56, 112, 154, 185, 254, 38, 184, 235, 187, 133, 255, 13, 112, 207, 7, 111, 7, 239, 52, 247, 223, 11, 119, 11, 216, 102, 206, 183, 195, 221, 1, 118, 118, 221, 233, 106, 127, 187, 60, 247, 71, 140, 24, 49, 98, 68, 189, 156, 211, 50, 109, 151, 127, 196, 136, 17, 245, 80, 119, 251, 254, 18, 198, 143, 183, 119, 139, 247, 66, 119, 192, 253, 150, 48, 158, 252, 78, 183, 120, 183, 175, 143, 239, 177, 238, 223, 183, 8, 198, 159, 127, 159, 46, 152, 94, 170, 212, 37, 224, 145, 233, 48, 59, 225, 239, 231, 150, 95, 53, 51, 60, 94, 141, 227, 45, 96, 15, 120, 28, 28, 50, 247, 86, 207, 98, 140, 62, 59, 244, 183, 3, 199, 123, 160, 131, 63, 129, 19, 123, 8, 3, 246, 244, 138, 177, 252, 29, 83, 133, 251, 176, 57, 231, 12, 250, 240, 55, 54, 100, 99, 127, 161, 159, 155, 112, 109, 31, 187, 254, 60, 142, 215, 14, 148, 186, 18, 236, 3, 207, 131, 181, 211, 237, 63, 127, 218, 38, 212, 94, 30, 132, 238, 14, 152, 122, 122, 16, 238, 227, 198, 94, 122, 158, 248, 108, 55, 253, 121, 186, 223, 184, 103, 70, 250, 231, 188, 152, 145, 158, 212, 39, 72, 225, 95, 70, 220, 175, 118, 231, 251, 163, 252, 238, 247, 164, 55, 142, 250, 217, 3, 115, 189, 97, 217, 180, 191, 163, 112, 126, 108, 175, 56, 63, 185, 55, 244, 127, 122, 111, 126, 62, 98, 251, 171, 88, 91, 186, 202, 247, 230, 158, 124, 239, 173, 184, 190, 1, 92, 4, 54, 130, 205, 224, 61, 224, 73, 115, 255, 253, 56, 190, 2, 92, 5, 174, 54, 247, 63, 3, 174, 3, 55, 130, 91, 193, 237, 44, 238, 59, 113, 188, 23, 236, 3, 63, 4, 63, 5, 247, 131, 3, 224, 160, 144, 7, 61, 15, 127, 2, 215, 255, 108, 238, 233, 253, 52, 207, 225, 248, 37, 193, 47, 249, 255, 55, 238, 141, 245, 135, 231, 61, 28, 207, 129, 163, 251, 197, 249, 73, 253, 98, 111, 137, 190, 191, 6, 199, 103, 247, 221, 58, 211, 254, 207, 237, 203, 58, 115, 233, 253, 2, 248, 191, 24, 108, 2, 151, 130, 203, 192, 86, 147, 246, 182, 126, 209, 102, 98, 237, 182, 29, 254, 63, 5, 174, 1, 215, 129, 235, 193, 205, 44, 63, 183, 225, 248, 43, 224, 235, 224, 46, 240, 93, 86, 182, 16, 63, 242, 148, 251, 81, 228, 241, 103, 253, 118, 158, 57, 46, 93, 63, 20, 200, 207, 98, 234, 43, 171, 212, 65, 27, 233, 255, 178, 63, 63, 222, 131, 70, 247, 191, 133, 251, 199, 126, 185, 124, 198, 150, 227, 105, 79, 187, 179, 211, 191, 171, 226, 242, 47, 198, 250, 85, 133, 253, 203, 212, 147, 182, 203, 151, 90, 254, 231, 250, 205, 230, 219, 183, 143, 106, 175, 89, 55, 127, 169, 95, 184, 135, 224, 42, 140, 49, 167, 6, 197, 249, 244, 96, 232, 247, 136, 129, 92, 54, 186, 191, 166, 35, 151, 171, 238, 250, 31, 34, 180, 151, 44, 102, 175, 217, 202, 65, 225, 30, 15, 247, 180, 193, 225, 81, 239, 108, 253, 135, 238, 159, 46, 216, 55, 20, 239, 67, 194, 216, 118, 177, 17, 219, 239, 220, 208, 96, 94, 206, 26, 204, 191, 118, 77, 70, 254, 207, 153, 136, 171, 135, 186, 14, 191, 133, 181, 99, 189, 191, 115, 3, 206, 207, 31, 20, 237, 127, 29, 219, 111, 121, 177, 241, 55, 48, 249, 219, 4, 247, 210, 65, 177, 239, 246, 114, 184, 31, 20, 234, 136, 175, 237, 172, 142, 216, 203, 153, 139, 206, 251, 149, 131, 249, 215, 248, 222, 213, 231, 80, 55, 175, 232, 12, 203, 254, 9, 227, 126, 22, 238, 93, 157, 97, 254, 79, 101, 97, 174, 53, 126, 174, 135, 123, 179, 16, 247, 173, 184, 182, 59, 177, 157, 180, 205, 49, 19, 99, 106, 49, 200, 24, 99, 220, 58, 231, 126, 200, 157, 96, 247, 151, 68, 98, 199, 167, 28, 215, 234, 150, 197, 161, 241, 145, 144, 80, 93, 26, 23, 32, 91, 141, 11, 225, 198, 45, 119, 210, 64, 18, 83, 183, 234, 174, 11, 19, 53, 199, 95, 181, 76, 181, 157, 129, 18, 18, 99, 203, 215, 83, 219, 151, 218, 204, 235, 73, 198, 28, 44, 6, 177, 243, 193, 251, 188, 195, 93, 164, 49, 131, 125, 124, 184, 72, 110, 157, 145, 198, 82, 57, 246, 181, 245, 119, 56, 233, 176, 169, 118, 23, 27, 119, 138, 238, 171, 110, 135, 220, 246, 174, 126, 41, 196, 107, 93, 92, 243, 14, 126, 191, 10, 187, 228, 234, 159, 242, 212, 97, 96, 26, 27, 61, 255, 169, 154, 30, 48, 75, 130, 255, 63, 215, 199, 211, 198, 93, 106, 209, 179, 232, 91, 204, 176, 176, 84, 198, 89, 166, 179, 30, 139, 43, 54, 127, 228, 63, 103, 158, 168, 74, 232, 101, 130, 217, 166, 27, 25, 151, 178, 252, 217, 231, 169, 132, 194, 42, 53, 63, 29, 201, 63, 73, 140, 125, 73, 166, 13, 246, 185, 182, 111, 76, 31, 210, 23, 174, 185, 202, 100, 167, 157, 170, 163, 80, 123, 166, 251, 84, 39, 248, 220, 142, 183, 63, 95, 218, 190, 178, 228, 228, 57, 213, 190, 161, 99, 45, 3, 227, 74, 246, 181, 133, 218, 175, 125, 62, 99, 249, 155, 85, 126, 137, 169, 143, 161, 48, 46, 180, 93, 150, 169, 162, 29, 210, 252, 119, 78, 165, 61, 195, 98, 237, 235, 179, 73, 74, 158, 171, 178, 111, 110, 251, 37, 155, 242, 62, 90, 169, 249, 253, 115, 85, 82, 182, 253, 210, 88, 54, 148, 6, 127, 78, 46, 99, 40, 117, 248, 244, 207, 169, 246, 165, 103, 107, 78, 255, 28, 18, 187, 237, 219, 58, 176, 243, 153, 107, 223, 113, 53, 191, 124, 185, 162, 109, 28, 122, 150, 75, 229, 112, 233, 92, 242, 171, 4, 255, 46, 127, 174, 116, 164, 235, 177, 117, 136, 11, 181, 85, 62, 190, 226, 50, 173, 230, 219, 159, 159, 199, 182, 111, 233, 249, 236, 146, 156, 114, 72, 107, 176, 161, 181, 9, 222, 150, 187, 230, 60, 181, 253, 165, 228, 55, 167, 61, 167, 234, 65, 159, 251, 198, 203, 74, 45, 236, 171, 249, 121, 200, 158, 52, 158, 150, 244, 96, 75, 217, 246, 236, 147, 208, 51, 153, 250, 2, 110, 227, 152, 177, 188, 84, 174, 166, 236, 235, 242, 75, 98, 247, 215, 117, 216, 87, 106, 255, 182, 216, 121, 45, 99, 223, 55, 24, 114, 132, 143, 181, 82, 158, 199, 85, 183, 191, 28, 200, 30, 100, 79, 27, 174, 211, 80, 255, 187, 92, 201, 125, 28, 159, 255, 199, 216, 180, 206, 246, 74, 98, 175, 149, 72, 235, 38, 41, 246, 204, 201, 91, 213, 182, 140, 141, 83, 169, 249, 121, 137, 205, 175, 212, 102, 121, 93, 161, 186, 68, 54, 91, 202, 252, 76, 59, 240, 213, 135, 84, 157, 82, 62, 114, 214, 250, 218, 104, 123, 62, 219, 244, 216, 53, 123, 237, 73, 26, 23, 147, 140, 43, 127, 220, 58, 124, 71, 45, 156, 91, 116, 204, 189, 178, 251, 17, 108, 125, 42, 203, 205, 173, 179, 57, 58, 140, 137, 155, 252, 196, 234, 91, 159, 207, 177, 176, 190, 114, 145, 216, 250, 86, 204, 77, 41, 191, 203, 191, 22, 251, 157, 127, 46, 227, 204, 181, 199, 172, 174, 49, 109, 213, 246, 211, 113, 78, 90, 46, 205, 123, 37, 137, 181, 113, 157, 216, 194, 215, 140, 93, 107, 200, 54, 52, 134, 224, 231, 29, 53, 92, 3, 246, 149, 247, 136, 4, 84, 162, 255, 58, 208, 18, 154, 43, 77, 122, 238, 241, 240, 174, 122, 44, 181, 9, 73, 234, 174, 27, 41, 72, 207, 82, 205, 180, 146, 235, 139, 94, 167, 212, 117, 102, 198, 92, 59, 18, 172, 80, 69, 31, 53, 151, 152, 182, 189, 47, 141, 142, 67, 121, 117, 189, 215, 152, 83, 243, 243, 209, 87, 195, 49, 149, 29, 71, 87, 128, 199, 101, 151, 61, 71, 183, 115, 106, 56, 22, 161, 120, 164, 116, 187, 70, 175, 75, 132, 124, 248, 160, 176, 100, 191, 54, 246, 35, 72, 117, 188, 237, 119, 163, 161, 118, 94, 133, 158, 248, 94, 183, 42, 165, 14, 29, 229, 62, 95, 236, 107, 188, 127, 168, 59, 125, 9, 158, 126, 138, 142, 170, 78, 63, 85, 170, 208, 191, 106, 56, 253, 80, 222, 180, 240, 231, 134, 52, 118, 117, 205, 193, 8, 26, 127, 244, 213, 112, 236, 161, 159, 193, 43, 85, 49, 254, 154, 100, 208, 26, 142, 62, 182, 219, 136, 253, 28, 38, 91, 165, 150, 191, 46, 241, 245, 129, 77, 244, 139, 250, 185, 90, 117, 29, 72, 209, 41, 175, 27, 246, 120, 131, 176, 199, 106, 92, 142, 50, 204, 178, 99, 155, 163, 77, 60, 147, 66, 120, 187, 175, 79, 221, 223, 80, 117, 187, 41, 91, 247, 114, 211, 205, 13, 111, 195, 215, 169, 202, 230, 143, 75, 236, 115, 187, 110, 234, 172, 3, 212, 14, 104, 45, 138, 247, 83, 117, 214, 75, 26, 163, 235, 246, 181, 210, 112, 140, 146, 231, 73, 51, 44, 111, 174, 246, 202, 231, 152, 212, 174, 165, 62, 94, 90, 255, 33, 168, 189, 242, 54, 59, 153, 80, 38, 151, 148, 13, 31, 26, 183, 214, 61, 166, 229, 58, 210, 118, 106, 122, 207, 154, 126, 246, 74, 115, 66, 123, 93, 65, 178, 53, 61, 167, 235, 232, 143, 66, 235, 72, 49, 172, 2, 199, 26, 215, 69, 234, 220, 161, 45, 59, 113, 120, 27, 150, 250, 24, 106, 203, 51, 204, 95, 221, 245, 198, 94, 171, 39, 151, 250, 159, 152, 119, 110, 90, 108, 91, 187, 202, 110, 247, 65, 124, 189, 96, 165, 135, 227, 12, 186, 239, 161, 189, 93, 174, 180, 83, 250, 103, 46, 49, 253, 78, 172, 148, 157, 91, 243, 254, 69, 251, 159, 117, 64, 126, 164, 235, 93, 79, 56, 105, 47, 155, 116, 141, 242, 171, 227, 163, 247, 161, 180, 31, 65, 211, 198, 183, 88, 210, 248, 49, 36, 199, 131, 19, 216, 249, 132, 131, 88, 251, 216, 235, 97, 169, 246, 77, 89, 127, 137, 185, 158, 26, 183, 253, 172, 76, 9, 167, 229, 196, 136, 50, 166, 72, 142, 77, 41, 156, 61, 62, 105, 66, 58, 97, 47, 94, 145, 214, 172, 165, 107, 41, 241, 197, 132, 11, 173, 157, 75, 174, 148, 78, 74, 190, 202, 150, 163, 202, 245, 210, 148, 252, 248, 198, 20, 33, 155, 249, 236, 235, 10, 87, 5, 82, 57, 235, 72, 199, 55, 214, 138, 145, 212, 248, 234, 202, 111, 89, 63, 117, 234, 179, 141, 116, 115, 108, 25, 35, 109, 151, 161, 233, 242, 134, 164, 77, 91, 164, 164, 95, 103, 221, 77, 201, 199, 68, 205, 121, 246, 233, 221, 30, 35, 150, 213, 95, 21, 250, 111, 66, 66, 105, 53, 161, 255, 166, 236, 156, 163, 239, 170, 109, 147, 243, 238, 193, 53, 47, 112, 197, 25, 90, 47, 115, 133, 207, 45, 67, 206, 220, 66, 242, 175, 50, 226, 74, 153, 143, 133, 164, 201, 126, 167, 137, 250, 222, 180, 62, 36, 225, 246, 201, 205, 91, 110, 185, 234, 234, 67, 67, 229, 173, 202, 14, 174, 120, 154, 174, 7, 177, 210, 84, 251, 41, 91, 214, 182, 242, 80, 214, 38, 139, 161, 111, 168, 178, 191, 181, 227, 77, 245, 75, 235, 184, 246, 190, 48, 233, 189, 71, 204, 183, 85, 101, 224, 107, 220, 180, 198, 158, 171, 251, 216, 112, 85, 151, 33, 245, 121, 42, 237, 215, 107, 18, 189, 231, 81, 250, 118, 197, 133, 174, 23, 49, 107, 122, 84, 254, 156, 247, 11, 92, 92, 239, 91, 83, 113, 165, 227, 26, 59, 73, 109, 130, 35, 237, 65, 230, 239, 12, 82, 203, 31, 131, 253, 222, 210, 126, 151, 201, 223, 3, 233, 125, 36, 41, 223, 107, 82, 217, 219, 124, 87, 107, 67, 239, 224, 92, 123, 122, 233, 61, 173, 222, 11, 160, 235, 241, 73, 106, 248, 175, 137, 220, 113, 111, 110, 125, 245, 217, 155, 246, 69, 212, 173, 175, 216, 52, 164, 253, 15, 252, 29, 56, 93, 179, 247, 67, 199, 8, 79, 103, 101, 68, 94, 168, 174, 74, 225, 99, 244, 111, 219, 177, 106, 29, 242, 245, 12, 254, 60, 209, 247, 232, 253, 94, 149, 237, 164, 199, 92, 178, 131, 109, 55, 87, 56, 234, 231, 200, 109, 82, 114, 244, 175, 235, 26, 175, 123, 125, 37, 63, 55, 105, 143, 126, 140, 240, 248, 165, 111, 226, 249, 190, 189, 49, 19, 119, 93, 223, 73, 214, 33, 246, 120, 230, 228, 146, 196, 174, 49, 248, 36, 102, 77, 66, 186, 23, 242, 235, 74, 199, 231, 143, 230, 142, 117, 140, 175, 165, 124, 140, 43, 191, 206, 164, 117, 163, 148, 52, 236, 107, 74, 201, 186, 110, 74, 236, 250, 103, 143, 177, 125, 115, 237, 42, 210, 171, 107, 238, 148, 35, 139, 101, 253, 160, 204, 28, 86, 178, 95, 153, 185, 112, 83, 101, 118, 73, 93, 235, 18, 77, 216, 184, 238, 58, 93, 119, 252, 49, 250, 208, 207, 78, 251, 27, 108, 223, 183, 32, 228, 143, 246, 106, 133, 198, 107, 246, 121, 93, 144, 232, 57, 202, 64, 45, 220, 107, 167, 37, 180, 119, 52, 102, 44, 81, 245, 154, 125, 221, 237, 179, 206, 119, 11, 135, 75, 30, 154, 78, 51, 165, 156, 124, 206, 66, 251, 20, 155, 104, 47, 246, 28, 198, 181, 31, 219, 245, 189, 119, 104, 94, 111, 203, 41, 37, 105, 98, 30, 112, 170, 106, 255, 95, 174, 210, 127, 1, 237, 61, 207, 90, 247, 186, 127, 147, 198, 237, 210, 26, 91, 91, 72, 245, 74, 250, 246, 155, 238, 209, 119, 223, 42, 33, 13, 105, 189, 33, 118, 239, 119, 74, 58, 49, 216, 54, 105, 58, 125, 223, 63, 37, 125, 237, 88, 135, 93, 110, 80, 106, 161, 78, 105, 239, 58, 217, 42, 119, 125, 78, 154, 99, 86, 173, 3, 74, 43, 86, 170, 76, 51, 215, 102, 246, 123, 22, 251, 191, 8, 218, 70, 244, 191, 76, 87, 127, 75, 239, 0, 98, 242, 40, 249, 43, 171, 139, 148, 240, 190, 246, 81, 117, 93, 72, 65, 235, 208, 215, 255, 18, 3, 229, 30, 31, 151, 173, 163, 185, 255, 95, 83, 158, 243, 170, 109, 105, 167, 229, 242, 67, 227, 112, 94, 207, 237, 111, 119, 120, 63, 93, 230, 127, 168, 74, 249, 251, 124, 87, 187, 35, 241, 189, 171, 82, 1, 127, 41, 82, 71, 189, 77, 233, 247, 237, 247, 134, 84, 215, 200, 78, 92, 164, 126, 38, 165, 14, 241, 254, 62, 229, 219, 203, 178, 101, 165, 49, 6, 255, 86, 139, 254, 9, 64, 229, 165, 49, 148, 157, 215, 144, 148, 109, 223, 117, 149, 157, 68, 250, 15, 130, 93, 230, 152, 57, 108, 46, 118, 158, 203, 254, 23, 222, 213, 110, 83, 234, 58, 47, 127, 207, 202, 111, 170, 148, 181, 127, 142, 78, 171, 148, 20, 93, 243, 127, 120, 133, 158, 137, 118, 123, 170, 34, 253, 178, 144, 232, 119, 165, 250, 189, 233, 105, 42, 252, 79, 42, 187, 108, 101, 243, 207, 237, 56, 158, 17, 222, 215, 230, 165, 177, 162, 221, 206, 83, 243, 159, 91, 206, 170, 251, 49, 187, 13, 211, 120, 136, 230, 43, 84, 54, 62, 94, 104, 66, 150, 168, 133, 255, 40, 144, 144, 254, 33, 86, 53, 147, 38, 29, 123, 60, 162, 245, 164, 231, 114, 115, 22, 174, 111, 62, 233, 122, 204, 56, 203, 87, 126, 169, 95, 182, 243, 188, 220, 193, 209, 137, 80, 57, 151, 169, 133, 107, 81, 75, 148, 251, 121, 228, 170, 243, 77, 244, 71, 190, 255, 30, 240, 181, 119, 187, 77, 243, 118, 109, 247, 41, 109, 172, 55, 112, 73, 29, 23, 198, 198, 93, 230, 95, 140, 190, 251, 212, 215, 243, 61, 141, 41, 227, 248, 216, 122, 20, 242, 91, 6, 87, 127, 195, 165, 199, 92, 126, 76, 101, 229, 235, 57, 244, 191, 235, 152, 61, 69, 57, 117, 36, 38, 188, 114, 28, 215, 217, 22, 125, 255, 121, 87, 74, 30, 63, 86, 165, 159, 16, 19, 106, 225, 191, 54, 98, 218, 122, 155, 239, 80, 171, 24, 171, 214, 53, 254, 173, 243, 221, 79, 91, 239, 177, 104, 76, 233, 179, 219, 152, 227, 122, 19, 82, 231, 60, 38, 86, 236, 189, 42, 169, 123, 48, 154, 218, 159, 208, 196, 30, 149, 152, 248, 155, 42, 243, 98, 220, 239, 33, 137, 148, 70, 91, 237, 169, 170, 114, 199, 232, 51, 69, 247, 116, 92, 247, 218, 133, 84, 142, 170, 227, 40, 27, 231, 98, 108, 23, 101, 227, 168, 178, 125, 214, 213, 214, 171, 212, 91, 217, 188, 248, 164, 238, 116, 203, 228, 205, 151, 191, 166, 164, 201, 250, 149, 147, 126, 85, 249, 207, 13, 95, 85, 250, 49, 233, 148, 213, 115, 200, 111, 29, 249, 78, 73, 191, 142, 184, 109, 73, 177, 157, 36, 185, 245, 192, 37, 255, 3];\nvar trieData = {\n  type: type,\n  data: data\n};\n\nfunction _createForOfIteratorHelperLoose$d(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$d(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$d(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$d(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$d(o, minLen);\n}\n\nfunction _arrayLikeToArray$d(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar categories = useData.categories,\n    decompositions = useData.decompositions;\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar stateMachine = new StateMachine(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions[codepoint]) {\n        var decomposed = decompositions[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper);\n\n_defineProperty(UniversalShaper, \"zeroMarkWidths\", 'BEFORE_GPOS');\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose$d(stateMachine.match(glyphs.map(useCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i = start; _i < start + limit; _i++) {\n      glyphs[_i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose$d(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var glyph = _step2.value;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = _createForOfIteratorHelperLoose$d(glyphs), _step3; !(_step3 = _iterator3()).done;) {\n    var glyph = _step3.value;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = _createForOfIteratorHelperLoose$d(glyphs), _step4; !(_step4 = _iterator4()).done;) {\n    var glyph = _step4.value;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nfunction _createForOfIteratorHelperLoose$c(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$c(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$c(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$c(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$c(o, minLen);\n}\n\nfunction _arrayLikeToArray$c(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose$c(script), _step; !(_step = _iterator()).done;) {\n    var s = _step.value;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nfunction _createForOfIteratorHelperLoose$b(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$b(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$b(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$b(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$b(o, minLen);\n}\n\nfunction _arrayLikeToArray$b(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar GSUBProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GSUBProcessor.prototype;\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    var _this = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _this$glyphs;\n\n            var sequence = table.sequences.get(_index);\n\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = _createForOfIteratorHelperLoose$b(table.ligatureSets.get(_index3)), _step; !(_step = _iterator()).done;) {\n            var ligature = _step.value;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = _createForOfIteratorHelperLoose$b(matched), _step2; !(_step2 = _iterator2()).done;) {\n              var _index4 = _step2.value;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose$b(matched), _step3; !(_step3 = _iterator3()).done;) {\n              var matchIndex = _step3.value; // Don't assign new ligature components for mark ligatures (see above)\n\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i = idx; _i < this.glyphs.length; _i++) {\n                if (this.glyphs[_i].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n\n            for (var _i2 = matched.length - 1; _i2 >= 0; _i2--) {\n              this.glyphs.splice(matched[_i2], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"GSUB lookupType \" + lookupType + \" is not supported\");\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nfunction _createForOfIteratorHelperLoose$a(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$a(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$a(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$a(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$a(o, minLen);\n}\n\nfunction _arrayLikeToArray$a(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar GPOSProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GPOSProcessor.prototype;\n\n  _proto.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n\n  };\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set = table.pairSets.get(_index);\n\n              for (var _iterator = _createForOfIteratorHelperLoose$a(set), _step; !(_step = _iterator()).done;) {\n                var _pair = _step.value;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"Unsupported GPOS table: \" + lookupType);\n    }\n  };\n\n  _proto.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  _proto.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  _proto.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  _proto.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = /*#__PURE__*/function () {\n  function OTLayoutEngine(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  var _proto = OTLayoutEngine.prototype;\n\n  _proto.setup = function setup(glyphRun) {\n    var _this = this; // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n\n\n    this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphInfo(_this.font, glyph.id, [].concat(glyph.codePoints));\n    }); // Select a script based on what is available in GSUB/GPOS.\n\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    var _this2 = this;\n\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n        return _this2.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n      });\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  _proto.zeroMarkAdvances = function zeroMarkAdvances(positions) {\n    for (var i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$9(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$9(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$9(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$9(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$9(o, minLen);\n}\n\nfunction _arrayLikeToArray$9(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar LayoutEngine = /*#__PURE__*/function () {\n  function LayoutEngine(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  var _proto = LayoutEngine.prototype;\n\n  _proto.layout = function layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        var codePoints = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose$9(string), _step; !(_step = _iterator()).done;) {\n          var glyph = _step.value;\n          codePoints.push.apply(codePoints, glyph.codePoints);\n        }\n\n        script = forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  _proto.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n\n        case 0x03:\n          return ch === 0x034F;\n\n        case 0x06:\n          return ch === 0x061C;\n\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$9(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator3 = _createForOfIteratorHelperLoose$9(this.engine.stringsForGlyph(gid)), _step3; !(_step3 = _iterator3()).done;) {\n        var string = _step3.value;\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$8(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$8(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$8(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$8(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen);\n}\n\nfunction _arrayLikeToArray$8(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = /*#__PURE__*/function () {\n  function Path() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  var _proto = Path.prototype;\n\n  _proto.toFunction = function toFunction() {\n    var _this = this;\n\n    return function (ctx) {\n      _this.commands.forEach(function (c) {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  }\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  ;\n\n  _proto.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return \"\" + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  }\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  ;\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n\n\n  _proto.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = _createForOfIteratorHelperLoose$8(this.commands), _step; !(_step = _iterator()).done;) {\n      var c = _step.value;\n      var args = [];\n\n      for (var i = 0; i < c.args.length; i += 2) {\n        var _fn = fn(c.args[i], c.args[i + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  }\n  /**\n   * Transforms the path by the given matrix.\n   */\n  ;\n\n  _proto.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  }\n  /**\n   * Translates the path by the given offset.\n   */\n  ;\n\n  _proto.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  ;\n\n  _proto.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n  /**\n   * Scales the path.\n   */\n  ;\n\n  _proto.scale = function scale(scaleX, scaleY) {\n    if (scaleY === void 0) {\n      scaleY = scaleX;\n    }\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  _createClass(Path, [{\n    key: \"cbox\",\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose$8(this.commands), _step2; !(_step2 = _iterator2()).done;) {\n          var command = _step2.value;\n\n          for (var i = 0; i < command.args.length; i += 2) {\n            cbox.addPoint(command.args[i], command.args[i + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$8(this.commands), _step3; !(_step3 = _iterator3()).done;) {\n        var c = _step3.value;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n\n  return Path;\n}();\n\nvar _loop = function _loop() {\n  var command = _arr[_i];\n\n  Path.prototype[command] = function () {\n    this._bbox = this._cbox = null;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i = 0, _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']; _i < _arr.length; _i++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$1;\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\n\nvar Glyph = (_class$1 = /*#__PURE__*/function () {\n  function Glyph(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  var _proto = Glyph.prototype;\n\n  _proto._getPath = function _getPath() {\n    return new Path();\n  };\n\n  _proto._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  _proto._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  _proto._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  _proto._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _this$_getTableMetric = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _this$_getTableMetric.advance,\n        leftBearing = _this$_getTableMetric.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _this$_getTableMetric2 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _this$_getTableMetric2.advance,\n          topBearing = _this$_getTableMetric2.bearing;\n    } else {\n      var os2;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  }\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  ;\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n\n\n  _proto.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  ;\n\n  _proto._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  ;\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n\n\n  _proto.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  _createClass(Glyph, [{\n    key: \"cbox\",\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: \"advanceWidth\",\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: \"ligatureCaretPositions\",\n    get: function get() {}\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._getName();\n    }\n  }]);\n\n  return Glyph;\n}(), (_applyDecoratedDescriptor(_class$1.prototype, \"cbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"cbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"bbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"path\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"path\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceWidth\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceWidth\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceHeight\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceHeight\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"name\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"name\"), _class$1.prototype)), _class$1);\n\nfunction _createForOfIteratorHelperLoose$7(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$7(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$7(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen);\n}\n\nfunction _arrayLikeToArray$7(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n\nvar Point$1 = /*#__PURE__*/function () {\n  function Point(onCurve, endContour, x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  var _proto = Point.prototype;\n\n  _proto.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}(); // Represents a component in a composite glyph\n\n\nvar Component = function Component(glyphID, dx, dy) {\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto2 = TTFGlyph.prototype; // Parses just the glyph header and returns the bounding box\n\n  _proto2._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  } // Parses a single glyph coordinate\n  ;\n\n  _proto2._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  } // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  ;\n\n  _proto2._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  _proto2._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT$1) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point$1(!!(flag & ON_CURVE$1), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR$1, flag & SAME_X$1);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR$1, flag & SAME_Y$1);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  _proto2._decodeComposite = function _decodeComposite(glyph, stream, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    } // this is a composite glyph\n\n\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point$1(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  _proto2._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _this$_metrics = this._metrics,\n        advanceWidth = _this$_metrics.advanceWidth,\n        advanceHeight = _this$_metrics.advanceHeight,\n        leftBearing = _this$_metrics.leftBearing,\n        topBearing = _this$_metrics.topBearing;\n    return [new Point$1(false, true, glyph.xMin - leftBearing, 0), new Point$1(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point$1(false, true, 0, glyph.yMax + topBearing), new Point$1(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  } // Decodes font data, resolves composite glyphs, and returns an array of contours\n  ;\n\n  _proto2._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = _createForOfIteratorHelperLoose$7(glyph.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point$1(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  _proto2._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  } // Converts contours to a Path object that can be rendered\n  ;\n\n  _proto2._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point$1(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\n\nvar CFFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = CFFGlyph.prototype;\n\n  _proto._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  _proto.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  _proto._getPath = function _getPath() {\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var stream = cff.stream;\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs;\n    var usedSubrs;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id) || {};\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30: // vhcurveto\n\n            case 31:\n              // hvcurveto\n              phase = op === 31;\n\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(\"Unknown op: 12 \" + op);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"Unknown op: \" + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = /*#__PURE__*/function (_TTFGlyph) {\n  _inheritsLoose(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    return _TTFGlyph.apply(this, arguments) || this;\n  }\n\n  var _proto = SBIXGlyph.prototype;\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n\n  _proto.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  _proto.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nfunction _createForOfIteratorHelperLoose$6(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$6(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$6(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen);\n}\n\nfunction _arrayLikeToArray$6(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = COLRGlyph.prototype;\n\n  _proto._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  ;\n\n  _proto.render = function render(ctx, size) {\n    for (var _iterator = _createForOfIteratorHelperLoose$6(this.layers), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          glyph = _step$value.glyph,\n          color = _step$value.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  _createClass(COLRGlyph, [{\n    key: \"layers\",\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = /*#__PURE__*/function () {\n  function GlyphVariationProcessor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  var _proto = GlyphVariationProcessor.prototype;\n\n  _proto.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  _proto.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  _proto.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  _proto.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  _proto.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  } // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  ;\n\n  _proto.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  _proto.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  _proto.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  _proto.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  } // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  ;\n\n  _proto.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  _proto.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        } // take product of all the axis scalars\n\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar resolved = Promise.resolve();\n\nvar Subset = /*#__PURE__*/function () {\n  function Subset(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n  var _proto = Subset.prototype;\n\n  _proto.includeGlyph = function includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  _proto.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    resolved.then(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}();\n\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\nvar Point = /*#__PURE__*/function () {\n  function Point() {}\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = /*#__PURE__*/function () {\n  function TTFGlyphEncoder() {}\n\n  var _proto = TTFGlyphEncoder.prototype;\n\n  _proto.encodeSimple = function encodeSimple(path, instructions) {\n    if (instructions === void 0) {\n      instructions = [];\n    }\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  _proto._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nfunction _createForOfIteratorHelperLoose$5(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$5(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$5(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen);\n}\n\nfunction _arrayLikeToArray$5(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar TTFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  var _proto = TTFSubset.prototype;\n\n  _proto._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n\n      for (var _iterator = _createForOfIteratorHelperLoose$5(glyf.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nfunction _createForOfIteratorHelperLoose$4(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$4(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$4(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);\n}\n\nfunction _arrayLikeToArray$4(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar CFFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  var _proto = CFFSubset.prototype;\n\n  _proto.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose$4(this.glyphs), _step; !(_step = _iterator()).done;) {\n      var gid = _step.value;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  _proto.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  _proto.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$4(this.glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var gid = _step2.value;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  _proto.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose$4(this.glyphs), _step3; !(_step3 = _iterator3()).done;) {\n      var gid = _step3.value;\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  _proto.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (var _i = 0, _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _createForOfIteratorHelperLoose$3(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$3(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);\n}\n\nfunction _arrayLikeToArray$3(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\n\nvar TTFFont = (_class = /*#__PURE__*/function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream, variationCoords) {\n    if (variationCoords === void 0) {\n      variationCoords = null;\n    }\n\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  var _proto = TTFFont.prototype;\n\n  _proto.setDefaultLanguage = function setDefaultLanguage(lang) {\n    if (lang === void 0) {\n      lang = null;\n    }\n\n    this.defaultLanguage = lang;\n  };\n\n  _proto._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(\"Error decoding table \" + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  }\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  ;\n\n  _proto.getName = function getName(key, lang) {\n    if (lang === void 0) {\n      lang = this.defaultLanguage || fontkit.defaultLanguage;\n    }\n\n    var record = this.name && this.name.records[key];\n\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[fontkit.defaultLanguage] || record['en'] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    }\n\n    return null;\n  }\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  ;\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n\n\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  ;\n\n  _proto.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n\n\n  _proto.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  ;\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  ;\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  _proto._getBaseGlyph = function _getBaseGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.getGlyph = function getGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  ;\n\n  _proto.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  ;\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n\n\n  _proto.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  }; // Standardized format plugin API\n\n\n  _proto.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  _createClass(TTFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      return this.getName('postscriptName');\n    }\n    /**\n     * The font's full name, e.g. \"Helvetica Bold\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: \"subfamilyName\",\n    get: function get() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: \"copyright\",\n    get: function get() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: \"ascent\",\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlinePosition\",\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlineThickness\",\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: \"italicAngle\",\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: \"numGlyphs\",\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: \"_cmapProcessor\",\n    get: function get() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: \"_layoutEngine\",\n    get: function get() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: \"availableFeatures\",\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: \"variationAxes\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = _createForOfIteratorHelperLoose$3(this.fvar.axis), _step; !(_step = _iterator()).done;) {\n        var axis = _step.value;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: \"namedVariations\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$3(this.fvar.instance), _step2; !(_step2 = _iterator2()).done;) {\n        var instance = _step2.value;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"_variationProcessor\",\n    get: function get() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n\n  return TTFFont;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"bbox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_cmapProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_cmapProcessor\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"characterSet\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"characterSet\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_layoutEngine\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_layoutEngine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"variationAxes\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"variationAxes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"namedVariations\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"namedVariations\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_variationProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_variationProcessor\"), _class.prototype)), _class);\n\nfunction _createForOfIteratorHelperLoose$2(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$2(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);\n}\n\nfunction _arrayLikeToArray$2(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$2(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nvar WOFFFont = /*#__PURE__*/function (_TTFFont) {\n  _inheritsLoose(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    return _TTFFont.apply(this, arguments) || this;\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  var _proto = WOFFFont.prototype;\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nfunction _createForOfIteratorHelperLoose$1(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$1(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n}\n\nfunction _arrayLikeToArray$1(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = /*#__PURE__*/function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  var _proto = TrueTypeCollection.prototype;\n\n  _proto.getFont = function getFont(name) {\n    for (var _iterator = _createForOfIteratorHelperLoose$1(this.header.offsets), _step; !(_step = _iterator()).done;) {\n      var offset = _step.value;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(TrueTypeCollection, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$1(this.header.offsets), _step2; !(_step2 = _iterator2()).done;) {\n        var offset = _step2.value;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return TrueTypeCollection;\n}();\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar DFontName = new r.String(r.uint8);\nnew r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = /*#__PURE__*/function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(header.map.typeList.types), _step; !(_step = _iterator()).done;) {\n      var type = _step.value;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.map.typeList.types), _step2; !(_step2 = _iterator2()).done;) {\n      var type = _step2.value;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(type.refList), _step3; !(_step3 = _iterator3()).done;) {\n        var ref = _step3.value;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  var _proto = DFont.prototype;\n\n  _proto.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step4; !(_step4 = _iterator4()).done;) {\n      var ref = _step4.value;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(DFont, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step5; !(_step5 = _iterator5()).done;) {\n        var ref = _step5.value;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return DFont;\n}();\n\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\nexport default fontkit;"],"names":["fontkit","formats","cache","target","key","descriptor","get","value","call","this","Object","defineProperty","fn","Map","memoized","_len","arguments","length","args","Array","_key","has","result","apply","set","registerFormat","format","push","openSync","filename","postscriptName","Error","open","callback","create","buffer","i","probe","font","getFont","defaultLanguage","setDefaultLanguage","lang","SubHeader","firstCode","entryCount","idDelta","idRangeOffset","CmapGroup","startCharCode","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","additionalCount","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","type","nonDefaultUVS","CmapSubtable","language","codeMap","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","MAC_LANGUAGE_ENCODINGS","ENCODINGS","LANGUAGES","_createForOfIteratorHelperLoose$s","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","_arrayLikeToArray$s","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray$s","done","TypeError","next","bind","arr","len","arr2","NameRecord","nameID","string","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","process","stream","_step","_iterator","record","obj","preEncode","val","indexOf","Buffer","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","_createForOfIteratorHelperLoose$r","_arrayLikeToArray$r","_unsupportedIterableToArray$r","CFFIndex","_proto","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offsetType","offSize","readUInt8","pos","ret","startPos","start","end","offset","item","encode","writeUInt16BE","sizes","s","writeUInt8","_i","_sizes","_step2","_iterator2","_item","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","writeInt16BE","c1","c2","FLOAT_EOF","_createForOfIteratorHelperLoose$q","_arrayLikeToArray$q","_unsupportedIterableToArray$q","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","defineProperties","_startOffset","_field","PropertyDescriptor","dict","includePointers","pointerSize","startOffset","k","pointers","pointerOffset","_step3","_iterator3","_step4","_iterator4","_step5","_iterator5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","valueOf","CFFPrivateDict","CFFBlendOp","numBlends","pop","standardStrings","StandardEncoding","ISOAdobeCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","useMarkFilteringSet","_","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","a","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","F2DOT14","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFEncoding","nCodes","codes","nRanges","ranges","RangeArray","_r$Array","resolveLength","res","range","CFFCustomCharset","CharStrings","CFFCharset","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","_proto4","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","data","pad","numComponents","components","dataLen","SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis$1","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","undefined","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable$1","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac$1","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","UnboundedArray","LookupTable","ValueType","Shadow","_proto3","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","assign","newState","Entry","StateArray","nClasses","classTable","stateArray","entryTable","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","shortFrac","Offset","gvar","globalCoordCount","globalCoords","ClassTable","subFeatureFlags","stateTable","ClassLookupTable","newStateOffset","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","_createForOfIteratorHelperLoose$p","_arrayLikeToArray$p","_unsupportedIterableToArray$p","CBLC","_class$4","TableEntry","checkSum","Directory","numTables","binarySearch","cmp","min","_createForOfIteratorHelperLoose$o","_arrayLikeToArray$o","_unsupportedIterableToArray$o","tables$1","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","iconv","err","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","_step2$value","lookup","codepoint","variationSelector","buf","String","fromCodePoint","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_step6","_res4","_iterator6","_group","getOwnPropertyDescriptor","_createForOfIteratorHelperLoose$n","_arrayLikeToArray$n","_unsupportedIterableToArray$n","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","_createForOfIteratorHelperLoose$m","_arrayLikeToArray$m","_unsupportedIterableToArray$m","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","_createForOfIteratorHelperLoose$l","_arrayLikeToArray$l","_unsupportedIterableToArray$l","GlyphRun","direction$1","bbox","p","GlyphPosition","allTypographicFeatures","code","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","_class$3","AATMapping","ot","aat","mapFeatureStrings","f","isNaN","typeCode","settingCode","_createForOfIteratorHelperLoose$k","_arrayLikeToArray$k","_unsupportedIterableToArray$k","AATLookupTable","seg","glyphsForValue","classValue","_segment","_createForOfIteratorHelperLoose$j","_arrayLikeToArray$j","_unsupportedIterableToArray$j","_class$2","AATStateMachine","reverse","processEntry","currentState","dir","classCode","shouldAdvance","entryIndex","traverse","opts","state","visited","Set","add","_this$stateTable","row","enter","exit","_createForOfIteratorHelperLoose$i","_arrayLikeToArray$i","_unsupportedIterableToArray$i","REVERSE_DIRECTION","AATMorxProcessor","processIndicRearragement","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","verb","swap","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_this$ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_this$glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_step7","_iterator7","generateInputsForSubtable","stack","found","_cache","_stack$pop","rangeA","rangeB","reverseA","reverseB","_createForOfIteratorHelperLoose$h","_arrayLikeToArray$h","_unsupportedIterableToArray$h","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","r","mapOTToAAT","getAvailableFeatures","_feature","_r","_f","keys","mapAATToOT","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","_createForOfIteratorHelperLoose$g","_arrayLikeToArray$g","_unsupportedIterableToArray$g","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","trieData$2","trie$2","Uint8Array","FEATURES","ShapingClasses","ISOL","FINA","FIN2","MEDI","MED2","INIT","NONE","STATE_TABLE$1","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","getShapingClass","_STATE_TABLE$state$ty","category","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","idx","increment","peekIndex","_createForOfIteratorHelperLoose$f","_arrayLikeToArray$f","_unsupportedIterableToArray$f","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_step8","_iterator8","_step8$value","cur","_step9","_iterator9","applyLookup","applyLookupList","_step10","_iterator10","lookupRecord","_step11","_iterator11","coverageIndex","_step12","_iterator12","match","sequence","matched","sequenceMatches","component","sequenceMatchIndices","coverageSequenceMatches","getClassID","_step13","_iterator13","classSequenceMatches","_this3","classID","applyContext","_step14","_iterator14","rule","_step15","_iterator15","_rule","applyChainingContext","_step16","_iterator16","rules","_step17","_iterator17","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","HangulShaper","getType","STATE_TABLE","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","HANGUL_BASE","L_BASE","V_BASE","T_BASE","isL","isV","isT","HANGUL_END","isLV","isLVT","isTone","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","lv","prevType","isCombiningL","isCombiningV","isCombiningT","del","advanceWidth","getLength","dottedCircle","indicMachine","accepting","tags","useData","categories","decompositions","CATEGORIES","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","trieData$1","_createForOfIteratorHelperLoose$e","_arrayLikeToArray$e","_unsupportedIterableToArray$e","decompositions$1","trie$1","stateMachine$1","IndicShaper","setupSyllables$1","initialReordering","finalReordering","unicodeScript","fromOpenType","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","IndicInfo","syllableType","syllable","_step$value","_i2","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable$1","_glyphs$start$shaperI","_i3","limit","hasReph","rphf","_g","_i4","seenBelow","_info","_i5","_i6","_info2","_i7","j","disallowDoubleHalants","_i8","_j","lastPos","_i9","_info3","_j2","_i10","_j3","_i11","_i12","blwf","_i13","_i14","abvf","pstf","_i15","pref","_i16","_j4","cfar","_i17","nonJoiner","_j5","tryPref","BASE_C","_i18","newPos","_i19","oldPos","tmp","newRephPos","_i20","reph","_i21","_newPos","_oldPos2","_oldPos","_tmp","trieData","_createForOfIteratorHelperLoose$d","_arrayLikeToArray$d","_unsupportedIterableToArray$d","trie","UniversalShaper","setupSyllables","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable","isHalant","_createForOfIteratorHelperLoose$c","_arrayLikeToArray$c","_unsupportedIterableToArray$c","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","_createForOfIteratorHelperLoose$b","_arrayLikeToArray$b","_unsupportedIterableToArray$b","_OTProcessor","_index","curGlyph","replacement","_index2","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","_createForOfIteratorHelperLoose$a","_arrayLikeToArray$a","_unsupportedIterableToArray$a","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","glyphInfos","setup","shaper","choose","glyphInfo","zeroMarkWidths","zeroMarkAdvances","cleanup","_createForOfIteratorHelperLoose$9","_arrayLikeToArray$9","_unsupportedIterableToArray$9","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","charCodeAt","_script","forString","glyphsForString","_script2","forCodePoints","hideDefaultIgnorables","positioned","space","isDefaultIgnorable","ch","plane","_createForOfIteratorHelperLoose$8","_arrayLikeToArray$8","_unsupportedIterableToArray$8","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","forEach","command","toSVG","round","join","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","freeze","cx","cy","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","cp1x","cp1y","cp2x","p3x","cp2y","p3y","_c$args3","b2ac","t1","sqrt","t2","_arr","_class$1","StandardNames","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","os2","_this$_getTableMetric","leftBearing","_this$_getTableMetric2","advanceHeight","topBearing","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","_createForOfIteratorHelperLoose$7","_arrayLikeToArray$7","_unsupportedIterableToArray$7","GlyfHeader","numberOfContours","Point$1","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","_proto2","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_this$_metrics","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","usedGsubrs","usedSubrs","trans","nStems","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","e","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","_createForOfIteratorHelperLoose$6","_arrayLikeToArray$6","_unsupportedIterableToArray$6","COLRLayer","color","COLRGlyph","layers","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","resolved","Promise","resolve","Subset","mapping","includeGlyph","encodeStream","then","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","_createForOfIteratorHelperLoose$5","_arrayLikeToArray$5","_unsupportedIterableToArray$5","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","_createForOfIteratorHelperLoose$4","_arrayLikeToArray$4","_unsupportedIterableToArray$4","_class","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_createForOfIteratorHelperLoose$3","_arrayLikeToArray$3","_unsupportedIterableToArray$3","TTFFont","variationCoords","_directoryPos","_tables","_glyphs","_decodeDirectory","_getTable","_decodeTable","logErrors","console","error","getName","nextState","createSubset","getVariation","settings","namedVariations","trim","default","_createForOfIteratorHelperLoose$2","_arrayLikeToArray$2","_unsupportedIterableToArray$2","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","alloc","_createForOfIteratorHelperLoose$1","_arrayLikeToArray$1","_unsupportedIterableToArray$1","TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","_createForOfIteratorHelperLoose","_arrayLikeToArray","_unsupportedIterableToArray","DFontName","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt"],"sourceRoot":""}