{"version":3,"file":"f16a9aa0-f6edc6d1cb9d3f32f496.js","mappings":"wNAqCAA,EAAAA,GAAAA,IAAe,CAAC,EAAD,GAAfA,EAAAA,KAEA,MAAMC,EAAgCC,GACpCA,EAAAA,GAAAA,aAAAA,kBAA0CA,EAD5C,kEAsJA,IAnJ0B,KACxB,MACEC,MAAM,YADF,KAEFC,EAAAA,EAAAA,gBAlCN,cAoCE,OACE,cACEC,GADF,aAEEC,cAFF,IAGEC,KAAKA,EAAAA,EAAAA,IAAF,+DAIeC,EAAAA,GAAAA,OAAAA,SAAAA,UAJf,iDAQeA,EAAAA,GAAAA,OAAAA,SAAAA,KARf,4GAmBKA,EAAAA,GAAAA,WAAAA,eAAAA,eAnBL,kDAwBgBA,EAAAA,GAAAA,WAAAA,MAAAA,MAAAA,GAAAA,SAxBhB,YA2BUA,EAAAA,GAAAA,QAAAA,MAAAA,UA3BV,cA4BgBA,EAAAA,GAAAA,WAAAA,MAAAA,MAAAA,GAAAA,SA5BhB,8GAwCKA,EAAAA,GAAAA,WAAAA,eAAAA,eAxCL,kDA6CgBA,EAAAA,GAAAA,WAAAA,MAAAA,MAAAA,GAAAA,SA7ChB,YAgDUA,EAAAA,GAAAA,QAAAA,MAAAA,UAhDV,cAiDgBA,EAAAA,GAAAA,WAAAA,MAAAA,MAAAA,GAAAA,SAjDhB,qDA0DH,QAAC,WAAD,CACED,KAAKA,EAAAA,EAAAA,IAAF,iBACgBC,EAAAA,GAAAA,QAAAA,OADhB,cAGHC,QAJF,MA7DF,eAsEE,aACEF,KAAKA,EAAAA,EAAAA,IAAF,aACYC,EAAAA,GAAAA,QAAAA,MADZ,cAGHE,WAAY,CAAEC,WAJhB,GAKEC,cALF,EAMEC,aANF,EAOEC,YAAa,CACX,CAACN,EAAAA,GAAAA,QAAAA,OAAAA,YAAkC,CACjCI,cAFS,GAIX,CAACJ,EAAAA,GAAAA,QAAAA,MAAAA,YAAiC,CAChCI,cAZN,IAeEG,aAfF,EAgBEC,YAhBF,GAkBGC,EAAAA,KAAiBC,IAEd,aAAaC,IAAKD,EAAlB,KACE,cACEX,KAAKA,EAAAA,EAAAA,IAAF,cACaC,EAAAA,GAAAA,QAAAA,MADb,iBAEeA,EAAAA,GAAAA,QAAAA,MAFf,gBAGcA,EAAAA,GAAAA,QAAAA,MAHd,kBAIgBA,EAAAA,GAAAA,QAAAA,OAJhB,wBAQQA,EAAAA,GAAAA,QAAAA,OAAAA,UARR,4BAYHY,SAAUF,EAAAA,KAbZ,IAcEG,SAAUH,EAdZ,QAeEI,MAAOJ,EAfT,SAgBEK,WACE,8BACML,EADN,aAEE,aACEM,UADF,QAEEC,SAAS,oBAAOP,EAFlB,UAGEQ,sBAHF,IAKE,gBACEnB,IADF,GAKGW,EA7BX,gBAkCES,WAAWC,EAAAA,EAAAA,IACTV,EADoB,UAEpBA,EApCJ,SAsCEO,SAAUP,EAAD,UAAuB,cAAKW,MAAL,QAtClC,SAwCE,cAAUC,KAAMZ,EAAAA,YA1CtB,YA1FR,C","sources":["webpack://@teimurjan/landing/./src/components/organisms/experience-history/ExperienceHistory.tsx"],"sourcesContent":["import { Fragment } from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { css } from '@emotion/react'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { Pagination, Navigation } from 'swiper'\nimport { prettyRange, theme } from '@teimurjan/utils'\nimport { ExperienceHistoryQuery } from '@teimurjan/gql-types'\nimport Tooltip from 'rc-tooltip'\nimport { RichText, ScrollToArea, Tag, Typography } from '../../atoms'\nimport { Card } from '../../molecules'\n\nconst query = graphql`\n  query ExperienceHistory {\n    gcms {\n      experiences(orderBy: startDate_DESC) {\n        id\n        logo {\n          url(\n            transformation: {\n              image: { resize: { width: 200, height: 200, fit: clip } }\n            }\n          )\n        }\n        company\n        position\n        startDate\n        endDate\n        description {\n          html\n        }\n        location\n        locationIcon\n      }\n    }\n  }\n`\n\nSwiperCore.use([Pagination, Navigation])\n\nconst handleSwiperBreakpointChange = (swiper: SwiperCore) =>\n  swiper.el.setAttribute('data-breakpoint', swiper.currentBreakpoint)\n\nconst ExperienceHistory = () => {\n  const {\n    gcms: { experiences },\n  } = useStaticQuery<ExperienceHistoryQuery>(query)\n\n  return (\n    <ScrollToArea\n      id=\"experience\"\n      scrollOffset={-120}\n      css={css`\n        .swiper-pagination-bullet {\n          width: 1rem;\n          height: 1rem;\n          background: ${theme.colors.geometry.blueAlpha};\n        }\n\n        .swiper-pagination-bullet-active {\n          background: ${theme.colors.geometry.blue};\n        }\n\n        .swiper-button-prev {\n          position: absolute;\n          left: 1rem;\n          bottom: 0;\n          z-index: 20;\n          /* TODO: polish controls */\n          opacity: 0;\n          transition: opacity 500ms\n            ${theme.transition.timingFunction.easeInOutCubic};\n          cursor: pointer;\n\n          &:after {\n            content: '⬅️';\n            font-size: ${theme.typography.title.large.h2.fontSize};\n          }\n\n          @media ${theme.screens.small.mediaUpTo} {\n            font-size: ${theme.typography.title.large.h3.fontSize};\n          }\n        }\n\n        .swiper-button-next {\n          position: absolute;\n          right: 1rem;\n          bottom: 0;\n          z-index: 20;\n          /* TODO: polish controls */\n          opacity: 0;\n          transition: opacity 500ms\n            ${theme.transition.timingFunction.easeInOutCubic};\n          cursor: pointer;\n\n          &:after {\n            content: '➡️';\n            font-size: ${theme.typography.title.large.h2.fontSize};\n          }\n\n          @media ${theme.screens.small.mediaUpTo} {\n            font-size: ${theme.typography.title.large.h3.fontSize};\n          }\n        }\n\n        .swiper-button-disabled {\n          opacity: 0;\n        }\n      `}\n    >\n      <Typography.Title\n        css={css`\n          margin-bottom: ${theme.spacing.medium};\n        `}\n        variant=\"h2\"\n      >\n        Experience\n      </Typography.Title>\n\n      <Swiper\n        css={css`\n          margin: 0 -${theme.spacing.small};\n        `}\n        pagination={{ clickable: true }}\n        slidesPerView={1}\n        spaceBetween={0}\n        breakpoints={{\n          [theme.screens.medium.breakpoint]: {\n            slidesPerView: 2,\n          },\n          [theme.screens.large.breakpoint]: {\n            slidesPerView: 3,\n          },\n        }}\n        onBreakpoint={handleSwiperBreakpointChange}\n        navigation\n      >\n        {experiences.map((experience) => {\n          return (\n            <SwiperSlide key={experience.id}>\n              <Card\n                css={css`\n                  margin-top: ${theme.spacing.small};\n                  margin-right: ${theme.spacing.small};\n                  margin-left: ${theme.spacing.small};\n                  margin-bottom: ${theme.spacing.xlarge};\n\n                  height: 500px;\n\n                  @media ${theme.screens.medium.mediaUpTo} {\n                    height: 625px;\n                  }\n                `}\n                imageSrc={experience.logo.url}\n                imageAlt={experience.company}\n                title={experience.position}\n                subtitle1={\n                  <Fragment>\n                    at {experience.company}{' '}\n                    <Tooltip\n                      placement=\"right\"\n                      overlay={<span>{experience.location}</span>}\n                      destroyTooltipOnHide\n                    >\n                      <span\n                        css={css`\n                          cursor: default;\n                        `}\n                      >\n                        {experience.locationIcon}\n                      </span>\n                    </Tooltip>\n                  </Fragment>\n                }\n                subtitle2={prettyRange(\n                  experience.startDate,\n                  experience.endDate\n                )}\n                overlay={!experience.endDate && <Tag color=\"blue\">Now</Tag>}\n              >\n                <RichText html={experience.description.html} />\n              </Card>\n            </SwiperSlide>\n          )\n        })}\n      </Swiper>\n    </ScrollToArea>\n  )\n}\n\nexport default ExperienceHistory\n"],"names":["SwiperCore","handleSwiperBreakpointChange","swiper","gcms","useStaticQuery","id","scrollOffset","css","theme","variant","pagination","clickable","slidesPerView","spaceBetween","breakpoints","onBreakpoint","navigation","experiences","experience","key","imageSrc","imageAlt","title","subtitle1","placement","overlay","destroyTooltipOnHide","subtitle2","prettyRange","color","html"],"sourceRoot":""}